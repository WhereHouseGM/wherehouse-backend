openapi: 3.0.0
info:
  title: Banchango Api v2
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
paths:
  '/v2/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id값
    get:
      summary: 사용자 정보 조회 및 수정
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0211112222'
                      phoneNumber: '01011112222'
                      companyName: testCompany
                      name: Test
                      userId: 1
                      type: SHIPPER
                      email: test@naver.com
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: string
                    minLength: 1
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                400_example:
                  value:
                    timestamp: '2020-11-11T01:52:48.667+0000'
                    status: 400
                    error: Bad Request
                    message: Missing request header 'Authorization' for method parameter of type String
                    path: /v2/users/1
        '401':
          description: 'Unauthorized : Token값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: 인증에 실패했습니다.
      operationId: get-v2-users-userId
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값. JWT Token 사용
          required: true
      description: 사용자 정보를 가져옵니다.
    patch:
      summary: 사용자 정보 수정
      operationId: patch-v2-users-userId
      responses:
        '200':
          description: 'OK : 정보 수정 완료'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0212342222'
                      phoneNumber: '0101234'
                      companyName: testCompanyName
                      name: testName
                      userId: 6
                      type: SHIPPER
                      email: testEmail@naver.com
        '400':
          description: 'Bad Request : 요청 형식이 잘못되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : Access Token값에 문제가 있어 인증에 실패한 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: 인증에 실패했습니다.
        '403':
          description: 'Forbidden : Path에 있는 userId와 Access Token이 가지는 userId 값이 달라 정보 수정이 불가한 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                403_Example:
                  value:
                    message: 해당 회원 정보를 수정하기 위한 권한이 없습니다.
        '404':
          description: |-
            Not Found : Path의 userId가 존재하지 않는 경우
            * 이 상태는 뜨지 않습니다. 수정 권한을 먼저 확인하기 때문에 403이 옵니다. 
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                404_example:
                  value:
                    message: 해당 id로 조회된 결과가 없습니다.
        '409':
          description: 'Conflict : 수정된 이메일이 이미 사용중인 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                409_example:
                  value:
                    message: 해당 이메일은 이미 사용 중 입니다.
      description: 사용자 정보 수정
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                type:
                  type: string
                  minLength: 1
                telephoneNumber:
                  type: string
                  minLength: 1
                companyName:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                  minLength: 1
              required:
                - email
                - name
                - password
                - type
                - telephoneNumber
                - companyName
                - phoneNumber
            examples:
              Request Example:
                value:
                  email: testEmail@naver.com
                  name: testName
                  password: '1234'
                  type: SHIPPER
                  telephoneNumber: '0212342222'
                  companyName: testCompanyName
                  phoneNumber: '0101234'
        description: |-
          사용자 정보 변경 시 필요한 정보(사용자 등록과 동일)
          * 변경하지 않는 부분도 모두 입력해야 합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token값. JWT Token 사용
          required: true
  /v2/users/sign-in:
    post:
      summary: 사용자 로그인
      operationId: post-v2-users-sign-in
      responses:
        '200':
          description: 'OK : 로그인 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                  accessToken:
                    type: string
                    minLength: 1
                  tokenType:
                    type: string
                    minLength: 1
                  refreshToken:
                    type: string
                    minLength: 1
                required:
                  - User
                  - accessToken
                  - tokenType
                  - refreshToken
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0211112222'
                      phoneNumber: '01011112222'
                      companyName: testCompany
                      name: Test
                      userId: 1
                      type: SHIPPER
                      email: test@naver.com
                    accessToken: Access Token 값
                    tokenType: Bearer
                    refreshToken: Refresh Token 값
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '404':
          description: 'Not Found : 로그인 실패 시'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                404_example:
                  value:
                    message: 이메일 또는 비밀번호가 잘못되었습니다.
      description: 사용자 로그인
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                  description: 사용자 email 주소
                password:
                  type: string
                  minLength: 1
                  description: sha256으로 인코딩된 비밀번호 값(64바이트)
              required:
                - email
                - password
            examples:
              로그인 요청 예시:
                value:
                  email: test@naver.com
                  password: '1234'
        description: 사용자 로그인에 필요한 값
  /v2/users/sign-up:
    post:
      summary: 사용자 회원 가입
      operationId: post-v2-users-sign-up
      responses:
        '201':
          description: 'Created : 가입 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                201_example:
                  value:
                    User:
                      telephoneNumber: '0212341234'
                      phoneNumber: '01012341234'
                      companyName: testCompanyName
                      name: testName
                      userId: 6
                      type: SHIPPER
                      email: testEmail@naver.com
        '400':
          description: 'Bad Request : 요청 형식이 잘못 되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '409':
          description: 'Conflict : 해당 이메일로 이미 가입이 되어있는 회원이 존재하는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                409_example:
                  value:
                    message: 해당 이메일은 이미 사용 중 입니다.
      description: 사용자 회원 가입
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                  description: sha256으로 인코딩된 비밀번호 값(64바이트)
                type:
                  type: string
                  minLength: 1
                  description: 회원 종류(SHIPPER 또는 OWNER 둘 중 하나)
                telephoneNumber:
                  type: string
                  minLength: 1
                companyName:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                  minLength: 1
              required:
                - email
                - name
                - password
                - type
                - telephoneNumber
                - companyName
                - phoneNumber
            examples:
              request_example:
                value:
                  email: testEmail@naver.com
                  name: testName
                  password: '1234'
                  type: SHIPPER
                  telephoneNumber: '0212341234'
                  companyName: testCompanyName
                  phoneNumber: '01012341234'
        description: 사용자 회원가입을 위한 정보
  /v2/auth/refresh-token:
    post:
      summary: 액세스 토큰을 재발급 받습니다.
      operationId: post-v2-auth-refresh-token
      responses:
        '200':
          description: 'OK : 재발급 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  accessToken:
                    type: string
                    minLength: 1
                  tokenType:
                    type: string
                    minLength: 1
                required:
                  - accessToken
                  - tokenType
              examples:
                200_Example:
                  value:
                    accessToken: 새로 발급된 Access Token 값
                    tokenType: Bearer
        '401':
          description: 'Unauthorized : Bearer 토큰값에 문제가 있는 경우(토큰값 오류 또는 유효기간 만료)'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token값. JWT Token 사용
          required: true
      description: 유효기간이 지난 액세스 토큰을 재발급 받습니다.
  /v2/warehouses:
    get:
      summary: 창고 검색 결과 조회
      tags: []
      responses:
        '200':
          description: 'OK : 검색 결과가 존재할 때'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  warehouses:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        landArea:
                          type: number
                        location:
                          type: object
                          properties:
                            latitude:
                              type: number
                            longitude:
                              type: number
                          required:
                            - latitude
                            - longitude
                        warehouseId:
                          type: number
                        type:
                          type: string
                          minLength: 1
                        canUse:
                          type: boolean
                        totalArea:
                          type: number
                        thumbnailUrl:
                          type: string
                          minLength: 1
                      required:
                        - name
                        - landArea
                        - warehouseId
                        - type
                        - canUse
                        - totalArea
                        - thumbnailUrl
                required:
                  - warehouses
              examples:
                200_example:
                  value:
                    warehouses:
                      - name: N09
                        location:
                          latitude: 1.1
                          longitude: 2.2
                        warehouseId: 1
                        type: ROOM_TEMPERATURE
                        canUse: true
                        totalArea: 1000
                        thumbnailUrl: image_url.com
                      - name: 나우 패킹
                        landArea: 30
                        location:
                          latitude: 3.3
                          longitude: 4.4
                        warehouseId: 2
                        type: ROOM_TEMPERATURE
                        canUse: true
                        totalArea: 30
                        thumbnailUrl: image_url2.com
        '204':
          description: 'No Content : 검색 결과가 없을 때'
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-v2-warehouses
      parameters:
        - schema:
            type: string
          in: query
          name: address
          description: 사용자가 검색한 주소 값
          required: true
        - schema:
            type: integer
          in: query
          name: limit
          description: 불러올 결과 목록의 개수
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          description: 창고들의 offset값
          required: true
  '/v2/warehouses/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
    get:
      summary: 특정 창고의 모든 정보 조회
      tags: []
      responses:
        '200':
          description: 'OK : 창고 정보 조회 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  warehouseCondition:
                    type: string
                    minLength: 1
                    description: |-
                      창고의 상태
                      ('ROOM_TEMPERATURE','LOW_TEMPERATURE','BONDED','SAVAGE','HAZARDOUS','SELF_STORAGE','CONTAINER') 중 하나의 값이 옵니다.
                  securityCompanyName:
                    type: string
                    minLength: 1
                    description: 보안업체명(없을 때는 null이 옵니다.)
                  landArea:
                    type: number
                    description: 대지 면적
                  parkingScale:
                    type: number
                    description: 주차장 면적
                  description:
                    type: string
                    minLength: 1
                    description: 창고 설명
                  cctvExist:
                    type: number
                    description: |-
                      CCTV 존재 유무
                      (존재 : 1, 없음 : 0)
                  ownerId:
                    type: number
                    description: 해당 창고를 등록한 사용자의 id값
                  addressDetail:
                    type: string
                    minLength: 1
                    description: 상세 주소
                  doorLockExist:
                    type: number
                    description: |-
                      도어락 존재 유무
                      (존재 : 1, 없음 : 0)
                  canPark:
                    type: number
                    description: |-
                      주차 가능 여부
                      (가능 : 1, 불가 : 0)
                  canPickup:
                    type: number
                    description: |-
                      픽업 가능 여부
                      (가능 : 1, 불가 : 0)
                  openAt:
                    type: string
                    minLength: 1
                    description: |-
                      창고 오픈 시간
                      ("HH:MM:ss" 규격)
                  address:
                    type: string
                    minLength: 1
                    description: 창고 주소
                  agencyDetails:
                    type: object
                    required:
                      - agencyWarehouseDetailId
                      - payments
                      - mainItemType
                      - warehouseType
                      - deliveryTypes
                    description: Agency만의 정보를 담은 객체
                    properties:
                      agencyWarehouseDetailId:
                        type: number
                        description: DB상에서 사용하는 값(프론트에서 필요 X)
                      payments:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        description: 창고 사용 비용 목록
                        items:
                          type: object
                          properties:
                            unit:
                              type: string
                              minLength: 1
                              description: |-
                                발생 비용에 대한 제목
                                (ex. "기본 포장 작업비")
                            cost:
                              type: number
                              description: 가격
                            description:
                              type: string
                              minLength: 1
                              description: 설명(ex. "300 ~ 500 SKU(총 물품 종류 수)")
                            paymentType:
                              type: string
                              minLength: 1
                              description: |-
                                보관 방식
                                ('STORE','WORK','DELIVER','OTHER') 중 하나의 값이 옵니다.
                          required:
                            - unit
                            - cost
                            - description
                            - paymentType
                      mainItemType:
                        type: string
                        minLength: 1
                        description: |-
                          창고가 가장 자신있게 보관할 수 있는 물품의 종류
                          ('CLOTH','TEMPERATURE_SENSITIVE','GENERAL_MERCHANDISE','ELECTRONIC','FURNITURE','BOOK','ACCESSORY','COSMETIC','ETC') 중 하나의 값이 옵니다.
                      warehouseType:
                        type: string
                        minLength: 1
                        description: |-
                          창고 종류
                          ("THREEPL", "FULFILLMENT") 중 하나의 값이 옵니다.
                      deliveryTypes:
                        type: array
                        description: 택배 업체명
                        items:
                          type: object
                          description: 택배 업체명이 배열 형태로 옵니다.(Array Of Strings)
                  closeAt:
                    type: string
                    minLength: 1
                    description: |-
                      창고 마감 시간
                      ("HH:mm:ss") 규격
                  canUse:
                    type: number
                    description: |-
                      창고 사용 가능 여부
                      (가능 : 1, 불가 : 0)
                  availableWeekdays:
                    type: number
                    description: |-
                      일주일 단위 사용 가능한 창고 일자
                      (ex. 일요일만 가능 --> 100000,
                        월화수목금 가능 --> 0111110)
                  securityCompanyExist:
                    type: number
                    description: |-
                      보안업체 존재 유무
                      (존재 : 1, 없음 : 0)
                  warehouseId:
                    type: number
                    description: 창고의 id값
                  name:
                    type: string
                    minLength: 1
                    description: 창고 이름
                  workerExist:
                    type: number
                    description: |-
                      현장 인력 존재 유무
                      (존재 : 1, 없음 : 0)
                  insuranceName:
                    type: string
                    minLength: 1
                    description: |-
                      보험사명
                      (없으면 이 값은 오지 않습니다.)
                  location:
                    type: object
                    required:
                      - latitude
                      - longitude
                    description: 창고 위치 정보 객체
                    properties:
                      latitude:
                        type: number
                        description: 위도
                      longitude:
                        type: number
                        description: 경도
                  availableTimeDetail:
                    type: string
                    minLength: 1
                    description: 사용 가능한 시간에 대한 상세 정보
                  airConditioningType:
                    type: string
                    minLength: 1
                    description: |-
                      냉난방 방식
                      ("HEATING", "COOLING", "NONE", "BOTH") 중 하나의 값이 옵니다.
                  totalArea:
                    type: number
                    description: 총 면적
                required:
                  - warehouseCondition
                  - securityCompanyName
                  - landArea
                  - parkingScale
                  - description
                  - cctvExist
                  - ownerId
                  - addressDetail
                  - doorLockExist
                  - canPark
                  - canPickup
                  - openAt
                  - address
                  - agencyDetails
                  - closeAt
                  - canUse
                  - availableWeekdays
                  - securityCompanyExist
                  - warehouseId
                  - name
                  - workerExist
                  - location
                  - availableTimeDetail
                  - airConditioningType
                  - totalArea
              examples:
                200_Example:
                  value:
                    warehouseCondition: BONDED
                    securityCompanyName: TEST_SEC_COMP_NAME2
                    landArea: 888
                    parkingScale: 99999
                    description: TEST DESC2
                    cctvExist: 1
                    ownerId: 2
                    addressDetail: TEST ADDR DETAIL2
                    doorLockExist: 1
                    canPark: 1
                    canPickup: 1
                    openAt: '01:11:00'
                    address: TEST ADDR2
                    agencyDetails:
                      agencyWarehouseDetailId: 6
                      payments:
                        - unit: TEST UNIT 2_1
                          cost: 999
                          description: DESC FOR UNIT 2_1
                          paymentType: STORE
                        - unit: TEST UNIT 2_2
                          cost: 888
                          description: DESC FOR UNIT 2_2
                          paymentType: OTHER
                      mainItemType: GENERAL_MERCHANDISE
                      warehouseType: FULFILLMENT
                      deliveryTypes:
                        - 한진 택배
                        - 테스트 택배
                    closeAt: '23:23:00'
                    canUse: 1
                    availableWeekdays: 1111111
                    securityCompanyExist: 1
                    warehouseId: 6
                    name: TEST NAME2
                    workerExist: 1
                    insuranceName: INSURANCE_NAME2
                    location:
                      latitude: 77.777
                      longitude: 66.666
                    availableTimeDetail: TEST AVAILABLE TIME DETAIL2
                    airConditioningType: HEATING
                    totalArea: 8888
        '204':
          description: 'No Content : 요청한 warehouseId로 등록된 창고 정보가 존재하지 않는 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: 'Unauthorized : Token 값에 문제가 있는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      operationId: get-v2-warehouses-warehouseId
      description: 특정 창고의 모든 정보를 조회합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
          required: true
    delete:
      summary: 창고를 삭제합니다.
      operationId: delete-v2-warehouses-warehouseId
      responses:
        '200':
          description: 'OK : 삭제가 완료된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                200_Example:
                  value:
                    message: 창고가 정상적으로 삭제되었습니다.
        '204':
          description: 'No Content : 해당 warehouseId로 저장된 창고가 존재하지 않을 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: string
        '401':
          description: 'Unauthorized : JWT Token값이 잘못 되거나 유효 기간이 지난 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: string
        '403':
          description: 'Forbidden : JWT Token값의 userId와 warehouseId로 조회된 창고를 등록한 userId가 다른 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                403_example:
                  value:
                    message: string
        '':
          description: 'OK : 삭제가 완료되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                200_example:
                  value:
                    message: 창고가 정상적으로 삭제되었습니다.
      description: 창고를 삭제합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
          required: true
  '/v2/warehouses/{warehouseId}/reviews':
    parameters:
      - schema:
          type: integer
        name: warehouseId
        in: path
        required: true
        description: 창고 id값
    get:
      summary: 창고 리뷰 목록을 조회합니다.
      tags: []
      responses:
        '200':
          description: 'OK : 리뷰 목록 가져오기 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  reviews:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - warehouseId
                        - rating
                        - content
                      properties:
                        warehouseId:
                          type: number
                        rating:
                          type: number
                        content:
                          type: string
                          minLength: 1
                        writer:
                          type: object
                          properties:
                            userId:
                              type: number
                            name:
                              type: string
                              minLength: 1
                            email:
                              type: string
                              minLength: 1
                            type:
                              type: string
                              minLength: 1
                            telephoneNumber:
                              type: string
                              minLength: 1
                            phoneNumber:
                              type: string
                              minLength: 1
                            companyName:
                              type: string
                              minLength: 1
                          required:
                            - userId
                            - name
                            - email
                            - type
                            - telephoneNumber
                            - phoneNumber
                            - companyName
                required:
                  - reviews
              examples:
                200_example:
                  value:
                    reviews:
                      - warehouseId: 1
                        rating: 5
                        content: 리뷰 제목1
                        writer:
                          userId: 1
                          name: userName
                          email: email@email.com
                          type: SHIPPER
                          telephoneNumber: '02123123'
                          phoneNumber: '0102123123'
                          companyName: company_name
                      - warehouseId: 1
                        rating: 4
                        content: 리뷰 제목2
                        writer:
                          userId: 2
                          name: userName2
                          email: email2@email2.com
                          type: SHIPPER
                          telephoneNumber: '022342342'
                          phoneNumber: '01022223333'
                          companyName: company_name2
        '204':
          description: 'No Content : 해당 warehouseId를 id로 가진 창고가 존재하지 않는 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : JWT Token값이 올바르지 않거나 유효기간이 지났을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
        '404':
          description: 'Not Found : 해당 warehouseId를 가진 창고는 존재하나, 리뷰가 존재하지 않는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                404_Example:
                  value:
                    message: 해당 창고에 등록된 리뷰가 없습니다.
      operationId: get-v2-warehouses-warehouseId-reviews
      description: 창고 리뷰 목록을 조회합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 불러올 리뷰 목록 개수입니다.
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          required: true
          description: offset 값입니다.
    post:
      summary: 창고 리뷰를 등록합니다.
      operationId: post-v2-warehouses-warehouseId-reviews
      responses:
        '200':
          description: 'OK : 리뷰 등록 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  review:
                    type: object
                    properties:
                      rating:
                        type: number
                      reviewId:
                        type: number
                      content:
                        type: string
                        minLength: 1
                    required:
                      - rating
                      - reviewId
                      - content
                  writer:
                    type: object
                    properties:
                      User:
                        type: object
                        properties:
                          telephoneNumber:
                            type: string
                            minLength: 1
                          phoneNumber:
                            type: string
                            minLength: 1
                          companyName:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          type:
                            type: string
                            minLength: 1
                          userId:
                            type: number
                          email:
                            type: string
                            minLength: 1
                        required:
                          - telephoneNumber
                          - phoneNumber
                          - companyName
                          - name
                          - type
                          - userId
                          - email
                    required:
                      - User
                required:
                  - review
                  - writer
              examples:
                200_Example:
                  value:
                    review:
                      rating: 1
                      reviewId: 1
                      content: 리뷰 내용!
                    writer:
                      User:
                        telephoneNumber: '0211112222'
                        phoneNumber: '01011112222'
                        companyName: testCompany
                        name: Test
                        type: SHIPPER
                        userId: 1
                        email: test@naver.com
        '204':
          description: 'No Content : warehouseId가 id인 창고가 존재하지 않는 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: string
                    minLength: 1
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                400_Example:
                  value:
                    timestamp: string
                    status: 0
                    error: string
                    message: string
                    path: string
        '401':
          description: 'Unauthorized : Token값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      description: 창고 리뷰를 등록합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                rating:
                  type: number
                content:
                  type: string
                  minLength: 1
              required:
                - rating
                - content
            examples:
              Request Body Example:
                value:
                  rating: 4
                  content: 리뷰 내용!
  '/v2/warehouses/{warehouseId}/reviews/{reviewId}':
    parameters:
      - schema:
          type: integer
        name: warehouseId
        in: path
        required: true
        description: 창고 id값
      - schema:
          type: integer
        name: reviewId
        in: path
        required: true
        description: 리뷰 id값
    delete:
      summary: 창고에 대한 리뷰를 삭제합니다.
      operationId: delete-v2-warehouses-warehouseId-reviews-reviewId
      responses:
        '200':
          description: 'OK : 리뷰가 정상적으로 삭제된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                200_Example:
                  value:
                    message: 리뷰가 성공적으로 삭제되었습니다.
        '204':
          description: 'Not Found : warehouseId로 검색된 창고가 없거나 reviewId에 해당하는 리뷰가 존재하지 않는 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : Token값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
        '403':
          description: 'Forbidden : 해당 리뷰를 삭제할 권한이 없을 경우(리뷰 작성자와 Token에 포함된 사용자의 id가 다른 경우)'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                403_Example:
                  value:
                    message: 해당 리뷰를 삭제하기 위한 권한이 없습니다.
      description: 창고에 대한 리뷰를 삭제합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
  /v2/warehouses/agency:
    post:
      summary: 새로운 Agency 창고 등록
      operationId: post-v2-warehouses-agency
      responses:
        '200':
          description: 'OK : 창고가 정상적으로 등록된 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                200_Example:
                  value:
                    message: 창고가 정상적으로 등록 되었습니다.
        '400':
          description: 'Bad Request : 요청 방식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 방식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : Token 값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
        '409':
          description: 'Conflict : Token값에 있는 userId로 등록된 사용자가 이미 등록한 창고가 존재하는 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                409_Example:
                  value:
                    message: 해당 사용자는 이미 창고를 등록했으므로 더 이상 등록할 수 없습니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
          required: true
      description: 새로운 창고를 등록합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                canUse:
                  type: number
                  description: |-
                    사용 가능한 창고인지의 유무
                    (1 : 가능, 0 : 불가)
                name:
                  type: string
                  minLength: 1
                  description: 창고의 이름
                serviceType:
                  type: string
                  minLength: 1
                  description: 무조건 AGENCY 이어야 한다.
                landArea:
                  type: number
                  description: 대지 면적
                totalArea:
                  type: number
                  description: 연 면적
                address:
                  type: string
                  minLength: 1
                  description: 주소
                addressDetail:
                  type: string
                  minLength: 1
                  description: 상세 주소
                description:
                  type: string
                  minLength: 1
                  description: 창고에 대한 설명
                availableWeekdays:
                  type: number
                  description: |-
                    일주일 단위 사용 가능한 창고 일자
                    (ex. 일요일만 가능 --> 100000,
                      월화수목금 가능 --> 0111110)
                openAt:
                  type: string
                  minLength: 1
                  description: |-
                    창고 사용 가능 시작 시간
                    ("HH:mm" 규격으로 작성해주세요.)
                closeAt:
                  type: string
                  minLength: 1
                  description: |-
                    창고 마감 시간
                    ("HH:mm" 규격으로 적어주세요)
                availableTimeDetail:
                  type: string
                  minLength: 1
                  description: 창고 사용 가능 상세 시간
                cctvExist:
                  type: number
                  description: |-
                    CCTV 존재 유무
                    (존재 : 1, 없음: 0)
                securityCompanyExist:
                  type: number
                  description: |-
                    보안업체 존재 유무
                    (존재 : 1, 없음 : 0)
                securityCompanyName:
                  type: string
                  minLength: 1
                  description: |-
                    보안업체명
                    (securityCompanyExist가 0이면 null 가능)
                doorLockExist:
                  type: number
                  description: |-
                    도어락 존재 유무
                    (존재 : 1, 없음 : 0)
                airConditioningType:
                  type: string
                  minLength: 1
                  description: |-
                    냉난방 방식
                    ("HEATING", "COOLING", "NONE", "BOTH") 중 택일
                workerExist:
                  type: number
                  description: |-
                    현장 인력 존재 유무
                    (존재 : 1, 없음 : 0)
                canPickup:
                  type: number
                  description: |-
                    픽업 가능 유무
                    (가능 : 1, 불가 : 0)
                canPark:
                  type: number
                  description: |-
                    주차 가능 여부
                    (가능 : 1, 불가 : 0)
                parkingScale:
                  type: number
                  description: 주차 면적
                warehouseType:
                  type: string
                  minLength: 1
                  description: |-
                    창고 조건
                    ("ROOM_TEMPERATURE","LOW_TEMPERATURE","BONDED","SAVAGE","HAZARDOUS","SELF_STORAGE","CONTAINER") 중 택일
                insurance:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      minLength: 1
                      description: |-
                        창고의 보험사명 기입
                        (필수 항목 아님, 있을 시에만 기입)
                location:
                  type: object
                  required:
                    - latitude
                    - longitude
                  description: 창고 위치 정보
                  properties:
                    latitude:
                      type: number
                      description: 창고 위도 값
                    longitude:
                      type: number
                      description: 창고 경도 값
                agencyDetail:
                  type: object
                  required:
                    - warehouseType
                    - typeName
                    - payments
                    - deliveryTypes
                  description: Agency 창고만을 위한 추가 정보
                  properties:
                    warehouseType:
                      type: string
                      minLength: 1
                      description: '창고 종류 ("THREEPL", "FULFILLMENT") 중 택일'
                    typeName:
                      type: string
                      minLength: 1
                      description: |-
                        창고가 가장 자신있게 보관할 수 있는 물품의 종류
                        ('CLOTH','TEMPERATURE_SENSITIVE','GENERAL_MERCHANDISE','ELECTRONIC','FURNITURE','BOOK','ACCESSORY','COSMETIC','ETC') 중 택일
                    payments:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      description: 창고 보관 비용에 대한 정보
                      items:
                        type: object
                        properties:
                          unit:
                            type: string
                            minLength: 1
                            description: |-
                              발생 비용에 대한 제목
                              (ex. "기본 포장 작업비")
                          cost:
                            type: number
                            description: 가격
                          description:
                            type: string
                            minLength: 1
                            description: 설명(ex. "300 ~ 500 SKU(총 물품 종류 수)")
                          type:
                            type: string
                            minLength: 1
                            description: |-
                              보관 방식
                              ('STORE','WORK','DELIVER','OTHER') 중 택일
                        required:
                          - unit
                          - cost
                          - description
                          - type
                    deliveryTypes:
                      type: array
                      description: '택배사 (ex. "한진 택배", "경동 택배")'
                      items:
                        type: string
              required:
                - canUse
                - name
                - serviceType
                - landArea
                - totalArea
                - address
                - addressDetail
                - description
                - availableWeekdays
                - openAt
                - closeAt
                - availableTimeDetail
                - cctvExist
                - securityCompanyExist
                - securityCompanyName
                - doorLockExist
                - airConditioningType
                - workerExist
                - canPickup
                - canPark
                - parkingScale
                - warehouseType
                - location
                - agencyDetail
            examples:
              Request Body example:
                value:
                  canUse: 1
                  name: TEST NAME
                  serviceType: AGENCY
                  landArea: 999
                  totalArea: 9999
                  address: TEST ADDR
                  addressDetail: TEST ADDR DETAIL
                  description: TEST DESC
                  availableWeekdays: 1111111
                  openAt: '01:00'
                  closeAt: '23:30'
                  availableTimeDetail: TEST AVAILABLE TIME DETAIL
                  cctvExist: 1
                  securityCompanyExist: 1
                  securityCompanyName: TEST_SEC_COMP_NAME
                  doorLockExist: 1
                  airConditioningType: BOTH
                  workerExist: 1
                  canPickup: 1
                  canPark: 1
                  parkingScale: 99999
                  warehouseType: ROOM_TEMPERATURE
                  insurance:
                    name: TEST INSURANCE NAME
                  location:
                    latitude: 99.999
                    longitude: 88.888
                  agencyDetail:
                    warehouseType: THREEPL
                    typeName: CLOTH
                    payments:
                      - unit: TEST UNIT 1
                        cost: 999
                        description: DESC FOR UNIT 1
                        type: STORE
                      - unit: TEST UNIT 2
                        cost: 888
                        description: DESC FOR UNIT 2
                        type: OTHER
                    deliveryTypes:
                      - 한진 택배
                      - 테스트 택배
        description: 새로운 Agency 창고 등록을 위한 모든 정보를 기입합니다.
    get:
      summary: 창고 목록 조회
      operationId: get-v2-warehouses-agency
      responses:
        '200':
          description: 'OK : 창고 목록 가져오기 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  warehouses:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          minLength: 1
                          description: 창고 주소
                        warehouseId:
                          type: number
                          description: 창고 id값
                        warehouseCondition:
                          type: string
                          minLength: 1
                          description: '(''ROOM_TEMPERATURE'',''LOW_TEMPERATURE'',''BONDED'',''SAVAGE'',''HAZARDOUS'',''SELF_STORAGE'',''CONTAINER'') 중 하나의 값이 옵니다. 창고의 상태를 의미합니다.'
                        name:
                          type: string
                          minLength: 1
                          description: 창고 이름
                        warehouseType:
                          type: string
                          minLength: 1
                          description: THREEPL 또는 FULFILLMENT이 옵니다.
                        closeAt:
                          type: string
                          minLength: 1
                          description: 창고 마감 시간
                        openAt:
                          type: string
                          minLength: 1
                          description: 창고 오픈 시간
                      required:
                        - address
                        - warehouseId
                        - warehouseCondition
                        - name
                        - warehouseType
                        - closeAt
                        - openAt
                required:
                  - warehouses
              examples:
                200_Example:
                  value:
                    warehouses:
                      - address: 서울특별시 강북구 월계로 75
                        warehouseId: 2
                        warehouseCondition: ROOM_TEMPERATURE
                        name: 나우 패킹
                        warehouseType: THREEPL
                        closeAt: '18:30:00'
                        openAt: '09:00:00'
                      - address: TEST ADDR
                        warehouseId: 5
                        warehouseCondition: ROOM_TEMPERATURE
                        name: TEST NAME
                        warehouseType: THREEPL
                        closeAt: '23:30:00'
                        openAt: '01:00:00'
        '401':
          description: 'Unauthorized : Token값에 문제가 있는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      description: 창고 목록을 조회합니다. 간단하게 창고 목록을 출력하는 페이지에서 사용합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Bearer Token 값. JWT Token을 사용합니다.
  /v2/warehouses/general:
    post:
      summary: 새로운 General 창고 등록
      operationId: post-v2-warehouses-general
      responses:
        '200':
          description: 'OK : 창고 등록에 성공한 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                200_Example:
                  value:
                    message: 창고가 정상적으로 등록 되었습니다.
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : Token값이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
        '409':
          description: 'Conflict : Token에 포함된 userId의 회원이 이미 등록한 창고가 존재하는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  canUse:
                    type: number
                    description: |-
                      사용 가능 여부
                      (가능 : 1, 불가 : 0)
                  name:
                    type: string
                    minLength: 1
                    description: 창고 이름
                  serviceType:
                    type: string
                    minLength: 1
                    description: 무조건 "GENERAL" 이어야 한다.
                  landArea:
                    type: number
                    description: 대지 면적
                  totalArea:
                    type: number
                    description: 연 면적
                  address:
                    type: string
                    minLength: 1
                    description: 주소
                  addressDetail:
                    type: string
                    minLength: 1
                    description: 상세 주소
                  description:
                    type: string
                    minLength: 1
                    description: 창고 설명
                  availableWeekdays:
                    type: number
                    description: |-
                      사용 가능한 일자를 0, 1로 나타낸 값.
                      ex) 월 수 금 사용 가능 --> 0101010
                  openAt:
                    type: string
                    minLength: 1
                    description: |-
                      창고 오픈 시간
                      (규격 : "HH:mm")
                  closeAt:
                    type: string
                    minLength: 1
                    description: |-
                      창고 마감 시간
                      (규격 : "HH:mm")
                  availableTimeDetail:
                    type: string
                    minLength: 1
                  cctvExist:
                    type: number
                  securityCompanyExist:
                    type: number
                  securityCompanyName:
                    type: string
                    minLength: 1
                  doorLockExist:
                    type: number
                  airConditioningType:
                    type: string
                    minLength: 1
                  workerExist:
                    type: number
                  canPickup:
                    type: number
                  canPark:
                    type: number
                  parkingScale:
                    type: number
                  warehouseType:
                    type: string
                    minLength: 1
                  location:
                    type: object
                    required:
                      - latitude
                      - longitude
                    properties:
                      latitude:
                        type: number
                      longitude:
                        type: number
                  insurance:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        minLength: 1
                  agencyDetail:
                    type: object
                    required:
                      - warehouseType
                      - typeName
                      - payments
                      - deliveryTypes
                    properties:
                      warehouseType:
                        type: string
                        minLength: 1
                      typeName:
                        type: string
                        minLength: 1
                      payments:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            unit:
                              type: string
                              minLength: 1
                            cost:
                              type: number
                            description:
                              type: string
                              minLength: 1
                            type:
                              type: string
                              minLength: 1
                          required:
                            - unit
                            - cost
                            - description
                            - type
                      deliveryTypes:
                        type: array
                        items:
                          type: object
                required:
                  - canUse
                  - name
                  - serviceType
                  - landArea
                  - totalArea
                  - address
                  - addressDetail
                  - description
                  - availableWeekdays
                  - openAt
                  - closeAt
                  - availableTimeDetail
                  - cctvExist
                  - securityCompanyExist
                  - securityCompanyName
                  - doorLockExist
                  - airConditioningType
                  - workerExist
                  - canPickup
                  - canPark
                  - parkingScale
                  - warehouseType
                  - location
                  - insurance
                  - agencyDetail
              examples:
                409_Example:
                  value:
                    message: 해당 사용자는 이미 창고를 등록했으므로 더 이상 등록할 수 없습니다.
            application/xml:
              schema:
                type: object
                properties: {}
      description: 새로운 General 창고를 등록합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                canUse:
                  type: number
                name:
                  type: string
                  minLength: 1
                serviceType:
                  type: string
                  minLength: 1
                landArea:
                  type: number
                totalArea:
                  type: number
                address:
                  type: string
                  minLength: 1
                addressDetail:
                  type: string
                  minLength: 1
                description:
                  type: string
                  minLength: 1
                availableWeekdays:
                  type: number
                openAt:
                  type: string
                  minLength: 1
                closeAt:
                  type: string
                  minLength: 1
                availableTimeDetail:
                  type: string
                  minLength: 1
                cctvExist:
                  type: number
                securityCompanyExist:
                  type: number
                securityCompanyName:
                  type: string
                  minLength: 1
                doorLockExist:
                  type: number
                airConditioningType:
                  type: string
                  minLength: 1
                workerExist:
                  type: number
                canPickup:
                  type: number
                canPark:
                  type: number
                parkingScale:
                  type: number
                warehouseType:
                  type: string
                  minLength: 1
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                  required:
                    - latitude
                    - longitude
                insurance:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 1
                  required:
                    - name
                generalDetail:
                  type: object
                  properties:
                    monthlyFee:
                      type: number
                    depositFee:
                      type: number
                    maintenanceFee:
                      type: number
                    minimumTerm:
                      type: number
                  required:
                    - monthlyFee
                    - depositFee
                    - maintenanceFee
                    - minimumTerm
              required:
                - canUse
                - name
                - serviceType
                - landArea
                - totalArea
                - address
                - addressDetail
                - description
                - availableWeekdays
                - openAt
                - closeAt
                - availableTimeDetail
                - cctvExist
                - securityCompanyExist
                - securityCompanyName
                - doorLockExist
                - airConditioningType
                - workerExist
                - canPickup
                - canPark
                - parkingScale
                - warehouseType
                - location
                - insurance
                - generalDetail
            examples:
              Request Body example:
                value:
                  canUse: 1
                  name: TEST NAME3
                  serviceType: GENERAL
                  landArea: 777
                  totalArea: 7777
                  address: TEST ADDR3
                  addressDetail: TEST ADDR DETAIL3
                  description: TEST DESC3
                  availableWeekdays: 1111111
                  openAt: '03:33'
                  closeAt: '22:21'
                  availableTimeDetail: TEST AVAILABLE TIME DETAIL3
                  cctvExist: 1
                  securityCompanyExist: 1
                  securityCompanyName: TEST_SEC_COMP_NAME3
                  doorLockExist: 1
                  airConditioningType: COOLING
                  workerExist: 1
                  canPickup: 1
                  canPark: 1
                  parkingScale: 98765
                  warehouseType: SAVAGE
                  location:
                    latitude: 77.777
                    longitude: 66.666
                  insurance:
                    name: INSURANCE_NAME3
                  generalDetail:
                    monthlyFee: 1000000
                    depositFee: 1000
                    maintenanceFee: 10000
                    minimumTerm: 3
        description: 새로운 General 창고 등록을 위한 정보를 기입합니다.
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
