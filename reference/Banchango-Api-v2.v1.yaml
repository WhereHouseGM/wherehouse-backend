openapi: 3.0.0
info:
  title: Banchango Api v2
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
paths:
  '/v2/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id값
    get:
      summary: 사용자 정보 조회 및 수정
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0211112222'
                      phoneNumber: '01011112222'
                      companyName: testCompany
                      name: Test
                      userId: 1
                      type: SHIPPER
                      email: test@naver.com
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: string
                    minLength: 1
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                400_example:
                  value:
                    timestamp: '2020-11-11T01:52:48.667+0000'
                    status: 400
                    error: Bad Request
                    message: Missing request header 'Authorization' for method parameter of type String
                    path: /v2/users/1
        '401':
          description: 'Unauthorized : Token값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: 인증에 실패했습니다.
      operationId: get-v2-users-userId
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값. JWT Token 사용
          required: true
      description: 사용자 정보를 가져옵니다.
    patch:
      summary: 사용자 정보 수정
      operationId: patch-v2-users-userId
      responses:
        '200':
          description: 'OK : 정보 수정 완료'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0212342222'
                      phoneNumber: '0101234'
                      companyName: testCompanyName
                      name: testName
                      userId: 6
                      type: SHIPPER
                      email: testEmail@naver.com
        '400':
          description: 'Bad Request : 요청 형식이 잘못되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : Access Token값에 문제가 있어 인증에 실패한 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: 인증에 실패했습니다.
        '403':
          description: 'Forbidden : Path에 있는 userId와 Access Token이 가지는 userId 값이 달라 정보 수정이 불가한 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                403_Example:
                  value:
                    message: 해당 회원 정보를 수정하기 위한 권한이 없습니다.
        '404':
          description: |-
            Not Found : Path의 userId가 존재하지 않는 경우
            * 이 상태는 뜨지 않습니다. 수정 권한을 먼저 확인하기 때문에 403이 옵니다. 
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                404_example:
                  value:
                    message: 해당 id로 조회된 결과가 없습니다.
        '409':
          description: 'Conflict : 수정된 이메일이 이미 사용중인 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                409_example:
                  value:
                    message: 해당 이메일은 이미 사용 중 입니다.
      description: 사용자 정보 수정
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                type:
                  type: string
                  minLength: 1
                telephoneNumber:
                  type: string
                  minLength: 1
                companyName:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                  minLength: 1
              required:
                - email
                - name
                - password
                - type
                - telephoneNumber
                - companyName
                - phoneNumber
            examples:
              Request Example:
                value:
                  email: testEmail@naver.com
                  name: testName
                  password: '1234'
                  type: SHIPPER
                  telephoneNumber: '0212342222'
                  companyName: testCompanyName
                  phoneNumber: '0101234'
        description: |-
          사용자 정보 변경 시 필요한 정보(사용자 등록과 동일)
          * 변경하지 않는 부분도 모두 입력해야 합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token값. JWT Token 사용
          required: true
  /v2/users/sign-in:
    post:
      summary: 사용자 로그인
      operationId: post-v2-users-sign-in
      responses:
        '200':
          description: 'OK : 로그인 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                  accessToken:
                    type: string
                    minLength: 1
                  tokenType:
                    type: string
                    minLength: 1
                  refreshToken:
                    type: string
                    minLength: 1
                required:
                  - User
                  - accessToken
                  - tokenType
                  - refreshToken
              examples:
                200_example:
                  value:
                    User:
                      telephoneNumber: '0211112222'
                      phoneNumber: '01011112222'
                      companyName: testCompany
                      name: Test
                      userId: 1
                      type: SHIPPER
                      email: test@naver.com
                    accessToken: Access Token 값
                    tokenType: Bearer
                    refreshToken: Refresh Token 값
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '404':
          description: 'Not Found : 로그인 실패 시'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                404_example:
                  value:
                    message: 이메일 또는 비밀번호가 잘못되었습니다.
      description: 사용자 로그인
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                  description: 사용자 email 주소
                password:
                  type: string
                  minLength: 1
                  description: sha256으로 인코딩된 비밀번호 값(64바이트)
              required:
                - email
                - password
            examples:
              로그인 요청 예시:
                value:
                  email: test@naver.com
                  password: '1234'
        description: 사용자 로그인에 필요한 값
  /v2/users/sign-up:
    post:
      summary: 사용자 회원 가입
      operationId: post-v2-users-sign-up
      responses:
        '201':
          description: 'Created : 가입 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  User:
                    type: object
                    required:
                      - telephoneNumber
                      - phoneNumber
                      - companyName
                      - name
                      - userId
                      - type
                      - email
                    properties:
                      telephoneNumber:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                        minLength: 1
                      companyName:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      userId:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                required:
                  - User
              examples:
                201_example:
                  value:
                    User:
                      telephoneNumber: '0212341234'
                      phoneNumber: '01012341234'
                      companyName: testCompanyName
                      name: testName
                      userId: 6
                      type: SHIPPER
                      email: testEmail@naver.com
        '400':
          description: 'Bad Request : 요청 형식이 잘못 되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '409':
          description: 'Conflict : 해당 이메일로 이미 가입이 되어있는 회원이 존재하는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                409_example:
                  value:
                    message: 해당 이메일은 이미 사용 중 입니다.
      description: 사용자 회원 가입
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                  description: sha256으로 인코딩된 비밀번호 값(64바이트)
                type:
                  type: string
                  minLength: 1
                  description: 회원 종류(SHIPPER 또는 OWNER 둘 중 하나)
                telephoneNumber:
                  type: string
                  minLength: 1
                companyName:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                  minLength: 1
              required:
                - email
                - name
                - password
                - type
                - telephoneNumber
                - companyName
                - phoneNumber
            examples:
              request_example:
                value:
                  email: testEmail@naver.com
                  name: testName
                  password: '1234'
                  type: SHIPPER
                  telephoneNumber: '0212341234'
                  companyName: testCompanyName
                  phoneNumber: '01012341234'
        description: 사용자 회원가입을 위한 정보
  /v2/auth/refresh-token:
    post:
      summary: 액세스 토큰을 재발급 받습니다.
      operationId: post-v2-auth-refresh-token
      responses:
        '200':
          description: 'OK : 재발급 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  accessToken:
                    type: string
                    minLength: 1
                  tokenType:
                    type: string
                    minLength: 1
                required:
                  - accessToken
                  - tokenType
              examples:
                200_Example:
                  value:
                    accessToken: 새로 발급된 Access Token 값
                    tokenType: Bearer
        '401':
          description: 'Unauthorized : Bearer 토큰값에 문제가 있는 경우(토큰값 오류 또는 유효기간 만료)'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token값. JWT Token 사용
          required: true
      description: 유효기간이 지난 액세스 토큰을 재발급 받습니다.
  /v2/warehouses:
    get:
      summary: 창고 검색 결과 조회
      tags: []
      responses:
        '200':
          description: 'OK : 검색 결과가 존재할 때'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  warehouses:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        landArea:
                          type: number
                        location:
                          type: object
                          properties:
                            latitude:
                              type: number
                            longitude:
                              type: number
                          required:
                            - latitude
                            - longitude
                        warehouseId:
                          type: number
                        type:
                          type: string
                          minLength: 1
                        canUse:
                          type: boolean
                        totalArea:
                          type: number
                        thumbnailUrl:
                          type: string
                          minLength: 1
                      required:
                        - name
                        - landArea
                        - warehouseId
                        - type
                        - canUse
                        - totalArea
                        - thumbnailUrl
                required:
                  - warehouses
              examples:
                200_example:
                  value:
                    warehouses:
                      - name: N09
                        location:
                          latitude: 1.1
                          longitude: 2.2
                        warehouseId: 1
                        type: ROOM_TEMPERATURE
                        canUse: true
                        totalArea: 1000
                        thumbnailUrl: image_url.com
                      - name: 나우 패킹
                        landArea: 30
                        location:
                          latitude: 3.3
                          longitude: 4.4
                        warehouseId: 2
                        type: ROOM_TEMPERATURE
                        canUse: true
                        totalArea: 30
                        thumbnailUrl: image_url2.com
        '204':
          description: 'No Content : 검색 결과가 없을 때'
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-v2-warehouses
      parameters:
        - schema:
            type: string
          in: query
          name: address
          description: 사용자가 검색한 주소 값
          required: true
        - schema:
            type: integer
          in: query
          name: limit
          description: 불러올 결과 목록의 개수
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          description: 창고들의 offset값
          required: true
  '/v2/warehouses/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-v2-warehouses-warehouseId
    delete:
      summary: 창고를 삭제합니다.
      operationId: delete-v2-warehouses-warehouseId
      responses:
        '200':
          description: 'OK : 삭제가 완료된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                200_Example:
                  value:
                    message: 창고가 정상적으로 삭제되었습니다.
        '204':
          description: 'No Content : 해당 warehouseId로 저장된 창고가 존재하지 않을 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: string
        '401':
          description: 'Unauthorized : JWT Token값이 잘못 되거나 유효 기간이 지난 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_example:
                  value:
                    message: string
        '403':
          description: 'Forbidden : JWT Token값의 userId와 warehouseId로 조회된 창고를 등록한 userId가 다른 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                403_example:
                  value:
                    message: string
        '':
          description: 'OK : 삭제가 완료되었을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                200_example:
                  value:
                    message: 창고가 정상적으로 삭제되었습니다.
      description: 창고를 삭제합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
          required: true
  '/v2/warehouses/{warehouseId}/reviews':
    parameters:
      - schema:
          type: integer
        name: warehouseId
        in: path
        required: true
        description: 창고 id값
    get:
      summary: 창고 리뷰 목록을 조회합니다.
      tags: []
      responses:
        '200':
          description: 'OK : 리뷰 목록 가져오기 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  reviews:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - warehouseId
                        - rating
                        - content
                      properties:
                        warehouseId:
                          type: number
                        rating:
                          type: number
                        content:
                          type: string
                          minLength: 1
                        writer:
                          type: object
                          properties:
                            userId:
                              type: number
                            name:
                              type: string
                              minLength: 1
                            email:
                              type: string
                              minLength: 1
                            type:
                              type: string
                              minLength: 1
                            telephoneNumber:
                              type: string
                              minLength: 1
                            phoneNumber:
                              type: string
                              minLength: 1
                            companyName:
                              type: string
                              minLength: 1
                          required:
                            - userId
                            - name
                            - email
                            - type
                            - telephoneNumber
                            - phoneNumber
                            - companyName
                required:
                  - reviews
              examples:
                200_example:
                  value:
                    reviews:
                      - warehouseId: 1
                        rating: 5
                        content: 리뷰 제목1
                        writer:
                          userId: 1
                          name: userName
                          email: email@email.com
                          type: SHIPPER
                          telephoneNumber: '02123123'
                          phoneNumber: '0102123123'
                          companyName: company_name
                      - warehouseId: 1
                        rating: 4
                        content: 리뷰 제목2
                        writer:
                          userId: 2
                          name: userName2
                          email: email2@email2.com
                          type: SHIPPER
                          telephoneNumber: '022342342'
                          phoneNumber: '01022223333'
                          companyName: company_name2
        '204':
          description: 'No Content : 해당 warehouseId를 id로 가진 창고가 존재하지 않는 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                400_Example:
                  value:
                    message: 요청 형식이 잘못되었습니다.
        '401':
          description: 'Unauthorized : JWT Token값이 올바르지 않거나 유효기간이 지났을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
        '404':
          description: 'Not Found : 해당 warehouseId를 가진 창고는 존재하나, 리뷰가 존재하지 않는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                404_Example:
                  value:
                    message: 해당 창고에 등록된 리뷰가 없습니다.
      operationId: get-v2-warehouses-warehouseId-reviews
      description: 창고 리뷰 목록을 조회합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: 불러올 리뷰 목록 개수입니다.
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          required: true
          description: offset 값입니다.
    post:
      summary: 창고 리뷰를 등록합니다.
      operationId: post-v2-warehouses-warehouseId-reviews
      responses:
        '200':
          description: 'OK : 리뷰 등록 성공'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  review:
                    type: object
                    properties:
                      rating:
                        type: number
                      reviewId:
                        type: number
                      content:
                        type: string
                        minLength: 1
                    required:
                      - rating
                      - reviewId
                      - content
                  writer:
                    type: object
                    properties:
                      User:
                        type: object
                        properties:
                          telephoneNumber:
                            type: string
                            minLength: 1
                          phoneNumber:
                            type: string
                            minLength: 1
                          companyName:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          type:
                            type: string
                            minLength: 1
                          userId:
                            type: number
                          email:
                            type: string
                            minLength: 1
                        required:
                          - telephoneNumber
                          - phoneNumber
                          - companyName
                          - name
                          - type
                          - userId
                          - email
                    required:
                      - User
                required:
                  - review
                  - writer
              examples:
                200_Example:
                  value:
                    review:
                      rating: 1
                      reviewId: 1
                      content: 리뷰 내용!
                    writer:
                      User:
                        telephoneNumber: '0211112222'
                        phoneNumber: '01011112222'
                        companyName: testCompany
                        name: Test
                        type: SHIPPER
                        userId: 1
                        email: test@naver.com
        '204':
          description: 'No Content : warehouseId가 id인 창고가 존재하지 않는 경우'
        '400':
          description: 'Bad Request : 요청 형식이 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: string
                    minLength: 1
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                400_Example:
                  value:
                    timestamp: string
                    status: 0
                    error: string
                    message: string
                    path: string
        '401':
          description: 'Unauthorized : Token값에 문제가 있을 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                401_Example:
                  value:
                    message: 인증에 실패했습니다.
      description: 창고 리뷰를 등록합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다. JWT Token을 사용합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                rating:
                  type: number
                content:
                  type: string
                  minLength: 1
              required:
                - rating
                - content
            examples:
              Request Body Example:
                value:
                  rating: 4
                  content: 리뷰 내용!
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
