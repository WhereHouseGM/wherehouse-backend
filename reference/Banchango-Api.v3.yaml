openapi: 3.0.0
info:
  title: Banchango-Api.v3
  version: '3.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /v3/warehouses:
    post:
      summary: 새로운 창고 등록
      operationId: post-v3-warehouses
      responses:
        '200':
          description: 창고 등록 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 창고를 정상적으로 등록했습니다
        '400':
          description: 잛못된 body 값을 전달한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
              examples:
                401_example:
                  value:
                    timestamp: 1608978553253
                    status: 401
                    error: Unauthorized
                    message: 잘못된 형식의 Jwt 토큰입니다.
                    path: /v3/users/15
      description: 새로운 창고를 등록합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWarehouseRequestDto'
        description: ''
      security:
        - Authorization: []
      tags:
        - 창고
        - v3
    get:
      summary: '창고 조회 및 검색 [주소 검색, 주요 품목별 검색]'
      operationId: get-v3-warehouses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  warehouses:
                    type: array
                    items:
                      $ref: '#/components/schemas/WarehouseSearchDto'
                required:
                  - warehouses
        '400':
          description: |-
            잘못된 요청을 보낸 경우
            [address와 category 쿼리 파라미터는 동시에 사용할 수 없습니다]
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
              examples:
                400_example:
                  value:
                    path: /v3/warehouses
                    error: Bad Request
                    message: mainitem 또는 address 하나만 있어야합니다.
                    timestamp: 1608977704448
                    status: 400
        '404':
          description: |-
            조회한 창고들이 아예 없을 경우
            (테이블에 없거나 창고 상태가 DELETED인 경우)
          content:
            application/json:
              schema:
                type: object
      parameters:
        - schema:
            type: string
            minLength: 1
          in: query
          name: address
          description: 검색할 주소. 주소로 창고를 검색할 때 사용합니다
        - schema:
            type: string
            enum:
              - ACCESSORY
              - BOOK
              - CLOTH
              - COLD_STORAGE
              - COSMETIC
              - ELECTRONICS
              - FOOD
              - FREEZE_STORAGE
              - GENERAL_MERCHANDISE
              - INTERIOR
              - LARGE_SIZE
              - SPORTS
          in: query
          name: mainItemTypes
          description: 창고 주요 품목. 특정 품목들을 취금하는 창고들을  찾을 때 사용합니다
        - schema:
            type: integer
          in: query
          name: page
          description: 페이지 번호입니다. 페이지네이션에 사용됩니다.
          required: true
        - schema:
            type: integer
          in: query
          name: size
          description: 불러올 창고 개수입니다. 페이지네이션에 사용됩니다.
          required: true
      tags:
        - 창고
        - v3
  /v3/users/sign-in:
    post:
      summary: 회원 로그인
      operationId: post-v3-users-sign-in
      responses:
        '200':
          description: 'OK : 로그인 성공 시'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  accessToken:
                    type: string
                    minLength: 1
                    description: 추후 일부 API들에 사용될 토큰 값입니다.
                  tokenType:
                    type: string
                    minLength: 1
                    description: Bearer 토큰
                  refreshToken:
                    type: string
                    minLength: 1
                  user:
                    $ref: '#/components/schemas/UserInfoResponseDto'
                required:
                  - accessToken
                  - tokenType
                  - refreshToken
                  - user
        '400':
          description: 'Bad Request : Request Body가 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: number
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                400_Example:
                  value:
                    timestamp: 1608975218077
                    status: 400
                    error: Bad Request
                    message: Bad Request Exception.
                    path: /v3/users/sign-in
        '404':
          description: 'No Content : 로그인 실패 시'
      description: 회원 로그인을 진행합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                  description: 회원 이메일
                password:
                  type: string
                  minLength: 1
                  description: 비밀번호 값 (sha256으로 인코딩 된 값)
              required:
                - email
                - password
        description: 회원 로그인에 필요한 값들을 전달합니다.
      tags:
        - 사용자
        - v3
  /v3/users/sign-up:
    post:
      summary: 회원 가입
      operationId: post-v3-users-sign-up
      responses:
        '200':
          description: 'OK : 회원 가입에 성공한 경우'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponseDto'
              examples:
                200_Example:
                  value:
                    userId: 14
                    name: TEST NAME
                    email: robbyra@gmail.com
                    type: SHIPPER
                    telephoneNumber: '0229093199'
                    phoneNumber: '01029093199'
                    companyName: TEST COMP
                    role: USER
        '400':
          description: 'Bad Request : Request Body가 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  path:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  timestamp:
                    type: number
                  status:
                    type: number
                required:
                  - path
                  - error
                  - message
                  - timestamp
                  - status
              examples:
                400_Example:
                  value:
                    path: /v3/users/sign-up
                    error: Bad Request
                    message: No enum constant com.banchango.domain.users.UserType.SHPPER
                    timestamp: 1608977704448
                    status: 400
        '409':
          description: 'Conflict : 이미 이메일이 가입되어 있는 상태인 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: number
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                409_Example:
                  value:
                    timestamp: 1608977407614
                    status: 409
                    error: Conflict
                    message: 해당 이메일은 이미 사용 중 입니다.
                    path: /v3/users/sign-up
      description: 사용자 회원 가입
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                  description: SHA256으로 인코딩 된 비밀번호 값
                type:
                  type: string
                  minLength: 1
                  description: SHIPPER(화주) 또는 OWNER(창고주) 의 값
                phoneNumber:
                  type: string
                  minLength: 1
                  description: 휴대폰 전화번호
                telephoneNumber:
                  type: string
                  description: 유선 전화번호
                companyName:
                  type: string
                  description: 회사명
              required:
                - name
                - email
                - password
                - type
                - phoneNumber
                - telephoneNumber
                - companyName
        description: 회원 가입에 필요한 정보들 입니다.
      tags:
        - 사용자
        - v3
  '/v3/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 회원 정보 조회
      tags:
        - 사용자
        - v3
      responses:
        '200':
          description: 'OK : 정보 조회 성공 시'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponseDto'
              examples:
                200_Example:
                  value:
                    userId: 15
                    name: TEST NAME
                    email: robbyra@gmail.com
                    type: SHIPPER
                    companyName: 회사이름
                    telephoneNumber: '0229093199'
                    phoneNumber: '01029093199'
                    role: USER
        '204':
          description: 사용자가 없는 경우
        '401':
          description: 'Unauthorized : Bearer 토큰 값에 문제가 있거나 토큰값과 다른 사용자의 정보를 보려고 하는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: number
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                401_Example:
                  value:
                    timestamp: 1608978553253
                    status: 401
                    error: Unauthorized
                    message: 잘못된 형식의 Jwt 토큰입니다.
                    path: /v3/users/15
        '404':
          description: 'Not Found : userId가 존재하지 않는 값인 경우'
      operationId: get-v3-users-userId
      description: 회원의 정보를 조회합니다.
      parameters: []
      security:
        - Authorization: []
    patch:
      summary: 회원 정보 수정
      operationId: patch-v3-users-userId
      responses:
        '200':
          description: 'OK : 정보 수정이 완료된 경우'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponseDto'
              examples:
                200_Example:
                  value:
                    userId: 15
                    name: Sangwoo
                    email: robbyra@gmail.com
                    type: OWNER
                    companyName: CompanyName
                    telephoneNumber: '027021033'
                    phoneNumber: '01029093199'
                    role: USER
        '400':
          description: 'Bad Request : Request Body에 문제가 있는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  path:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  timestamp:
                    type: number
                  status:
                    type: number
                required:
                  - path
                  - error
                  - message
                  - timestamp
                  - status
              examples:
                400_Example:
                  value:
                    path: /v3/users/15
                    error: Bad Request
                    message: 'Validation failed for argument [0] in public com.banchango.users.dto.UserInfoResponseDto com.banchango.users.controller.UsersApiController.updateUserInfo(com.banchango.users.dto.UserSignupRequestDto,java.lang.Integer,java.lang.String): [Field error in object ''userSignupRequestDto'' on field ''name'': rejected value [null]; codes [NotBlank.userSignupRequestDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userSignupRequestDto.name,name]; arguments []; default message [name]]; default message [Name field is required.]] '
                    timestamp: 1608979252493
                    status: 400
        '401':
          description: 'Unauthorized : Bearer 토큰 값에 문제가 있거나 토큰값과 다른 사용자의 수정하려는 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  timestamp:
                    type: number
                  status:
                    type: number
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  path:
                    type: string
                    minLength: 1
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                401_Example:
                  value:
                    timestamp: 1608979400307
                    status: 401
                    error: Unauthorized
                    message: 해당 사용자의 정보를 조회할 권한이 없습니다.
                    path: /v3/users/14
      description: 회원 정보를 수정합니다.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                  minLength: 1
                telephoneNumber:
                  type: string
                companyName:
                  type: string
              required:
                - name
                - phoneNumber
                - telephoneNumber
                - companyName
        description: 회원의 정보를 수정 여부에 관계 없이 모두 입력합니다.
      tags:
        - 사용자
        - v3
      security:
        - Authorization: []
  /v3/users/password-lost:
    patch:
      summary: 임시 비밀번호 이메일 전송
      operationId: patch
      responses:
        '200':
          description: 'OK : 이메일 전송이 완료된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                200_Example:
                  value:
                    message: 임시 비밀번호 이메일이 정상적으로 전송되었습니다.
        '400':
          description: 'Bad Request : Request Body가 잘못된 경우'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  path:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  timestamp:
                    type: number
                  status:
                    type: number
                required:
                  - path
                  - error
                  - message
                  - timestamp
                  - status
              examples:
                400_Example:
                  value:
                    path: /v3/users/password-lost
                    error: Bad Request
                    message: 'Validation failed for argument [0] in public com.banchango.common.dto.BasicMessageResponseDto com.banchango.users.controller.UsersApiController.sendTemporaryPasswordToEmail(com.banchango.users.dto.UserEmailSendRequestDto): [Field error in object ''userEmailSendRequestDto'' on field ''email'': rejected value [null]; codes [NotBlank.userEmailSendRequestDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userEmailSendRequestDto.email,email]; arguments []; default message [email]]; default message [Email is required.]] '
                    timestamp: 1608979766248
                    status: 400
        '404':
          description: 'No Content : 이메일이 회원가입이 되어 있지 않은 경우'
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: 비밀번호 분실 시 임시 비밀번호가 담긴 이메일을 전송합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
              required:
                - email
        description: 임시 비밀번호를 발급받을 이메일을 전달합니다.
      tags:
        - 사용자
        - v3
    parameters: []
  '/v3/warehouses/{warehouseId}':
    parameters:
      - schema:
          type: integer
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    get:
      summary: 창고 상세정보 조회
      tags:
        - 창고
        - v3
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseDetailDto'
        '400':
          description: 찰못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
              examples: {}
        '404':
          description: 해당 창고가 존재하지 않는 경우
          content:
            application/json:
              schema:
                type: object
      operationId: get-v3-warehouses-warehouseId
    delete:
      summary: 창고 삭제
      operationId: delete-v3-warehouses-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 창고를 정상적으로 삭제했습니다
        '204':
          description: 삭제할 창고가 없는 경우
          content:
            application/json:
              schema:
                type: object
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: 토큰이 없거나 만료된 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
              examples:
                401_example:
                  value:
                    timestamp: 1608978553253
                    status: 401
                    error: Unauthorized
                    message: 잘못된 형식의 Jwt 토큰입니다.
                    path: /v3/users/15
        '403':
          description: 다른 사용자의 창고인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - Authorization: []
      tags:
        - 창고
        - v3
    put:
      summary: 창고 정보를 수정합니다.
      operationId: put-v3-warehouses-warehouseId
      responses:
        '200':
          description: 'OK : 수정 완료 시'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseDetailDto'
        '400':
          description: 'Bad Request : Request Body가 잘못된 경우'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: |-
            창고 상태가 VIEWABLE이 아니거나
            다른 사용자의 창고를 수정하려 한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: 창고가 삭제되었거나 기타 이유로 수정이 불가한 경우(warehouseId가 없는 경우 포함)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Token 값입니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                space:
                  type: number
                address:
                  type: string
                  minLength: 1
                addressDetail:
                  type: string
                  minLength: 1
                description:
                  type: string
                  minLength: 1
                availableWeekdays:
                  type: number
                openAt:
                  type: string
                  minLength: 1
                closeAt:
                  type: string
                  minLength: 1
                availableTimeDetail:
                  type: string
                  minLength: 1
                cctvExist:
                  type: boolean
                doorLockExist:
                  type: string
                  minLength: 1
                airConditioningType:
                  type: string
                  minLength: 1
                workerExist:
                  type: boolean
                canPark:
                  type: boolean
                mainItemTypes:
                  type: array
                  items:
                    required: []
                    properties: {}
                warehouseType:
                  type: string
                  minLength: 1
                warehouseCondition:
                  type: array
                  items:
                    required: []
                    properties: {}
                minReleasePerMonth:
                  type: number
                latitude:
                  type: number
                longitude:
                  type: number
                insurances:
                  type: array
                  items:
                    required: []
                    properties: {}
                securityCompanies:
                  type: array
                  items:
                    required: []
                    properties: {}
                deliveeryTypes:
                  type: array
                  items:
                    required: []
                    properties: {}
                warehouseFacilityUsages:
                  type: array
                  items:
                    required: []
                    properties: {}
                warehouseUsageCautions:
                  type: array
                  items:
                    required: []
                    properties: {}
              required:
                - name
                - space
                - address
                - addressDetail
                - description
                - availableWeekdays
                - openAt
                - closeAt
                - availableTimeDetail
                - cctvExist
                - doorLockExist
                - airConditioningType
                - workerExist
                - canPark
                - mainItemTypes
                - warehouseType
                - warehouseCondition
                - minReleasePerMonth
                - latitude
                - longitude
                - insurances
                - securityCompanies
                - deliveeryTypes
                - warehouseFacilityUsages
                - warehouseUsageCautions
            examples:
              Request Body Example:
                value:
                  name: NEW NAME
                  space: 11
                  address: NEW ADDRESS
                  addressDetail: NEW ADDR DETAIL
                  description: NEW DESC
                  availableWeekdays: 111111
                  openAt: NEW OPENAT
                  closeAt: NEW CLOSEAT
                  availableTimeDetail: NEW AVAILABLE TIME DETAIL
                  cctvExist: false
                  doorLockExist: 'false'
                  airConditioningType: NONE
                  workerExist: false
                  canPark: false
                  mainItemTypes:
                    - COSMETIC
                    - COLD_STORAGE
                  warehouseType: FULFILLMENT
                  warehouseCondition:
                    - BONDED
                    - ROOM_STORAGE
                  minReleasePerMonth: 1000
                  latitude: 11.11
                  longitude: 22.22
                  insurances:
                    - 화재보험
                    - 손해배상보험
                  securityCompanies:
                    - 보안업체1
                    - 보안업체2
                  deliveeryTypes:
                    - 롯데택배
                    - 한진택배
                  warehouseFacilityUsages:
                    - 유의사항1
                    - 유의사항2
                  warehouseUsageCautions:
                    - 주의사항1
                    - 주의사항2
        description: 창고 정보 수정을 위해 변경 여부와 관계 없이 창고의 모든 정보를 입력합니다.
      tags:
        - 창고
        - v3
  /v3/admin/warehouses:
    get:
      summary: 관리자용 창고 조회
      tags:
        - 관리자
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  properties:
                    warehouseId:
                      description: 해당 창고의 id 값입니다.
                      type: integer
                    name:
                      type: string
                      minLength: 1
                      description: 창고 이름입니다.
                    createdAt:
                      type: string
                      minLength: 1
                      description: 창고 요청이 등록된 날짜입니다.
                  required:
                    - warehouseId
                    - name
                    - createdAt
              examples:
                200_Example:
                  value:
                    - warehouseId: 9
                      name: 에스에스팩
                      createdAt: 2021년 1월 4일 19시 2분 0초
                    - warehouseId: 10
                      name: 가야물류
                      createdAt: 2021년 1월 4일 19시 3분 0초
        '204':
          description: 'Not Found : 대기중인 창고 등록 요청이 없는 경우'
        '401':
          description: 'Unauthorized : 토큰 값이 잘못된 경우 입니다.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 'Forbidden : 토큰 값이 잘못된 경우 입니다. (관리자가 아닌 계정으로 로그인했을 경우 등)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
              examples: {}
      operationId: get-v3-admin-warehouses
      description: |
        창고 등록 요청이 온 창고들을 조회합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: 조회할 페이지 입니다.(0-base)
          required: true
        - schema:
            type: integer
          in: query
          name: size
          description: 한 페이지 당 불러올 항목의 개수입니다.
          required: true
        - schema:
            type: string
            enum:
              - DELETED
              - IN_PROGRESS
              - REJECTED
              - VIEWABLE
          in: query
          name: status
          description: 창고 상태
          required: true
      security:
        - Authorization: []
  /v3/estimates:
    post:
      summary: 견적 문의 생성
      operationId: post-v3-estimates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                200 example:
                  value:
                    message: 견적 문의가 성공적으로 생성되었습니다
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: |-
            창고 상태가 VIEWABLE이 아닌 경우
            (IN_PROGRESS 또는 REJECTED 또는 DELETED인 경우)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      description: ''
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseEstimateRequestDto'
      tags:
        - 견적 문의
        - v3
  '/v3/users/{userId}/estimates':
    get:
      summary: 사용자가 작성한 견적 문의 목록
      operationId: get-v3-estimates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimates:
                    type: array
                    items:
                      $ref: '#/components/schemas/EstimateSearchDto'
                required:
                  - estimates
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: access token에 있는 userId와 쿼리 파라미터로 주어진 userId가 일치하지 않을 때
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      parameters: []
      description: ''
      security:
        - Authorization: []
      tags:
        - 견적 문의
        - v3
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
  /v3/users/change-password:
    patch:
      summary: 비밀번호 변경하기
      operationId: post-v3-users-change-password
      responses:
        '200':
          description: 비밀번호 변경 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: 비밀번호를 성공적으로 변경했습니다
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: originalPassword가 기존 비밀번호와 다를 때 발생합니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: access token에 있는 사용자 id가 존재하지 않을 때
      description: ''
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestDto'
        description: ''
      tags:
        - 사용자
        - v3
  '/v3/estimates/{estimateId}/items':
    get:
      summary: 특정 견적 문의에 포함된 상품 정보 목록 조회
      tags:
        - 견적 문의
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimateItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/EstimateItemSearchDto'
                required:
                  - estimateItems
        '400':
          description: estimateId 값이 주어지지 않았을 때
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 남이 작성한 견적 문의의 상품 정보 목록을 조회하려할 때
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: 견적 문의가 없거나 창고가 없는 경우(테이블에 진짜 없거나 상태가 DELETED인 경우)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      operationId: get-v3-estimate-items
      description: ''
      security:
        - Authorization: []
      parameters: []
    parameters:
      - schema:
          type: integer
        name: estimateId
        in: path
        required: true
        description: 견적 문의 id
  /v3/admin/estimates:
    get:
      summary: '[관리자] 견적 문의 요청한 것 보기'
      tags:
        - 관리자
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimates:
                    type: array
                    items:
                      $ref: '#/components/schemas/EstimateSearchDto'
                required:
                  - estimates
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      operationId: get-v3-admin-estimates
      description: |
        `/v3/admin/estimates`: 모든 견적 문의 보기

        `/v3/admin/estimates?status=RECEPTED`

        `/v3/admin/estimates?status=IN_PROGRESS`

        `/v3/admin/estimates?status=DONE`
      parameters:
        - schema:
            type: string
            enum:
              - RECEPTED
              - IN_PROGRESS
              - DONE
          in: query
          name: status
          description: 견적 상태
        - schema:
            type: integer
          in: query
          name: page
          required: true
          description: 조회할 페이지 입니다.(0-base)
        - schema:
            type: integer
          in: query
          name: size
          required: true
          description: 한 페이지 당 불러올 항목의 개수입니다.
      security:
        - Authorization: []
  '/v3/admin/estimates/{estimateId}/status':
    patch:
      summary: '[관리자]견적 문의 상태 변경'
      operationId: patch-v3-estimates-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: ''
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 견적 문의 상태가 성공적으로 변경됐습니다
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있을 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateStatusUpdqteRequestDto'
        description: ''
      description: ''
      tags:
        - 관리자
        - v3
    parameters:
      - schema:
          type: string
        name: estimateId
        in: path
        required: true
        description: 견적 문의 id
  '/v3/admin/estimates/{estimateId}/items':
    get:
      summary: '[관리자]특정 견적 문의에 포함된 상품 정보 목록 조회'
      tags:
        - 관리자
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimateItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/EstimateItemSearchDto'
                required:
                  - estimateItems
        '400':
          description: estimateId 값이 주어지지 않았을 때
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: 견적 문의가 없거나 창고가 없는 경우(테이블에 진짜 없거나 상태가 DELETED인 경우)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      operationId: get-v3-admin-estimate-items
      description: ''
      security:
        - Authorization: []
      parameters: []
    parameters:
      - schema:
          type: integer
        name: estimateId
        in: path
        required: true
        description: 견적 문의 id
  '/v3/admin/warehouses/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    get:
      summary: '[관리자] 창고 상세 정보 조회'
      tags:
        - 관리자
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseAdminDetailResponseDto'
        '204':
          description: 해당 창고가 없는 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      operationId: get-v3-admin-warehouses-warehouseId
      description: |-
        일반 사용자가 볼 수 있는 창고 정보와
        창고 status와 창고 생성일까지 볼 수 있습니다
      security:
        - Authorization: []
    put:
      summary: '[관리자] 창고 수정'
      operationId: put-v3-admin-warehouses-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseAdminDetailResponseDto'
        '204':
          description: 수정할 창고가 없는 경우
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 관리자
        - v3
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseAdminUpdateRequestDto'
  '/v3/admin/images/delete/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    delete:
      summary: '[관리자] 창고 extra 이미지 삭제'
      operationId: delete-v3-admin-images-delete-warehouseId
      responses:
        '200':
          description: 창고 이미지 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 삭제에 성공했습니다
        '204':
          description: 삭제할 창고가 없는 경우
        '400':
          description: 잘못된 요청인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: '관리자가 아닌 경우  '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      parameters:
        - schema:
            type: string
          in: query
          name: file
          description: 파일 이름
          required: true
      description: ''
      tags:
        - 관리자
        - v3
      security:
        - Authorization: []
  '/v3/admin/images/delete/main/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    delete:
      summary: '[관리자] 창고 메인 이미지 삭제'
      operationId: delete-v3-admin-images-delete-main-warehouseId
      responses:
        '200':
          description: 창고 이미지 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 삭제에 성공했습니다
        '204':
          description: 삭제할 창고가 없는 경우
        '400':
          description: 잘못된 요청인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: '관리자가 아닌 경우  '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - Authorization: []
      tags:
        - 관리자
        - v3
  '/v3/admin/images/upload/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    post:
      summary: '[관리자] 창고 extra 이미지 업로드'
      operationId: post-v3-admin-images-upload-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoResponseDto'
        '400':
          description: 잘못된 요청 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '406':
          description: extra 이미지 개수가 5개 이상인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 관리자
        - v3
      description: ''
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: |-
                    업로드할 파일

                    openapi 3.0이 파일 타입을 제공하지 않아서 string으로 작성했습니다
                  format: binary
              required:
                - file
        description: ''
      security:
        - Authorization: []
  '/v3/admin/images/upload/main/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    post:
      summary: '[관리자] 창고 메인 이미지 업로드'
      operationId: post-v3-admin-images-upload-main-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoResponseDto'
        '400':
          description: 잘못된 요청 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 관리자가 아닌 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '406':
          description: 메인 이미지를 이미 등록한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 관리자
        - v3
      security:
        - Authorization: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: |-
                    업로드할 파일

                    openapi 3.0이 파일 타입을 제공하지 않아서 string으로 작성했습니다
                  format: binary
              required:
                - file
  '/v3/images/delete/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    delete:
      summary: 창고 extra 이미지 삭제
      operationId: delete-v3-images-delete-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: 삭제에 성공했습니다
        '204':
          description: 삭제할 사진이 없는 경우
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 다른 사용자의 창고인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 이미지
        - v3
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: file
          description: 파일 이름
          required: true
      description: ''
  '/v3/images/delete/main/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    delete:
      summary: 창고 메인 이미지 삭제
      operationId: delete-v3-images-delete-main-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: 삭제에 성공했습니다
        '204':
          description: 삭제할 이미지가 없는 경우
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token에 문제가 있는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 다른 사용자의 창고인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      security:
        - Authorization: []
      tags:
        - 이미지
        - v3
  '/v3/images/upload/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    post:
      summary: 창고 extra 이미지 업로드
      operationId: post-v3-images-upload-warehouseId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoResponseDto'
        '400':
          description: 잘못된 요청 보냈을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: access token이 잘못된 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 다른 사용자의 창고인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '406':
          description: |-
            extra 이미지 개수가 이미 5개인 경우
            (최대 5개까지 올릴 수 있습니다)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 이미지
        - v3
      security:
        - Authorization: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |-
                    업로드할 파일입니다

                    openapi 3.0에 파일 타입이 없어서 string으로 작성했습니다
              required:
                - file
  '/v3/images/upload/main/{warehouseId}':
    parameters:
      - schema:
          type: string
        name: warehouseId
        in: path
        required: true
        description: 창고 id
    post:
      summary: 창고 메인 이미지 업로드
      operationId: post-v3-images-upload-main-warehouseId
      responses:
        '200':
          description: 메인 이미지 업로드 성공한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfoResponseDto'
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: 다른 사용자의 창고인 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '406':
          description: 이미 메인 이미지를 등록한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      tags:
        - 이미지
        - v3
      description: ''
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |-
                    업로드할 파일입니다

                    openapi 3.0에 파일 타입이 없어서 string으로 작성했습니다
              required:
                - file
  /v3/users/withdraw:
    delete:
      summary: 사용자 탈퇴
      operationId: post-v3-users-withdraw
      responses:
        '200':
          description: 성공적으로 탈퇴한 경우
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: 탈퇴했습니다
        '401':
          description: access token에 문제가 있는경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: 탈퇴할 사용자가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
      description: ''
      security:
        - Authorization: []
      tags:
        - 사용자
        - v3
components:
  schemas:
    NewWarehouseRequestDto:
      title: NewWarehouseRequestDto
      type: object
      x-examples:
        example-1:
          value:
            name: TEST NAME
            space: 999
            address: TEST ADDR
            addressDetail: TEST ADDR DETAIL
            description: TEST DESC
            availableWeekdays: 1111111
            openAt: '01:00'
            closeAt: '23:30'
            availableTimeDetail: TEST AVAILABLE TIME DETAIL
            cctvExist: 1
            securityCompanyExist: 1
            securityCompanyName: TEST_SEC_COMP_NAME
            doorLockExist: 1
            airConditioningType: BOTH
            workerExist: 1
            canPickup: 1
            canPark: 1
            warehouseCondition:
              - ROOM_TEMPERATURE
              - SELF_STORAGE
            warehouseFacilityUsages:
              - 물품은 바코딩 및 박싱 작업이 필요합니다.
              - 물품 출고는 매일 14시에 발송됩니다.
            warehouseUsageCautions:
              - 사전 협의되지 않은 물품에 대한 추가 비용이 발생할 수 있습니다.
              - '보관되는 물품의 크기가 1m 이상인 경우, 보관이 불가합니다.'
            insurance: TEST INSURANCE NAME
            latitude: 99.999
            longitude: 88.888
            warehouseType: THREEPL
            minReleasePerMonth: 1000
            mainItemTypes:
              - CLOTH
              - BOOK
            deliveryTypes:
              - 한진 택배
              - 테스트 택배
      properties:
        name:
          type: string
          minLength: 1
          description: 창고 이름
        space:
          description: 창고 평수
          type: integer
        address:
          type: string
          minLength: 1
          description: 창고 주소
        addressDetail:
          type: string
          minLength: 1
          description: 창고 상세 주소
        description:
          type: string
          minLength: 1
          description: 창고 간단 설명
        availableWeekdays:
          description: |-
            일주일 단위 사용 가능한 창고 일자
            (ex. 일요일만 가능 --> 100000,
              월화수목금 가능 --> 0111110)
          type: integer
        openAt:
          type: string
          minLength: 1
          description: |-
            창고 오픈 시간
            ("HH:mm" 형식)
        closeAt:
          type: string
          minLength: 1
          description: |-
            창고 마감 시간
            ("HH:mm" 형식)
        availableTimeDetail:
          type: string
          minLength: 1
          description: 창고 사용 가능 시간에 대한 추가 설명
        cctvExist:
          description: |-
            CCTV 존재 유무
            (존재 : 1, 없음 : 0)
          type: integer
        doorLockExist:
          description: |-
            도어락 존재 유무
            (존재 : 1, 없음 : 0)
          type: integer
        airConditioningType:
          type: string
          minLength: 1
          description: |-
            냉난방 방식
            ("HEATING", "COOLING", "NONE", "BOTH") 중 하나의 값.
        workerExist:
          description: |-
            현장 인력 존재 유무
            (존재 : 1, 없음 : 0)
          type: integer
        canPark:
          description: |-
            주차 가능 여부
            (가능 : 1, 불가 : 0)
          type: integer
        mainItemTypes:
          type: array
          description: 창고가 가장 자신있게 보관할 수 있는 물품의 종류들
          items:
            type: string
            enum:
              - CLOTH
              - COSMETIC
              - ACCESSORY
              - GENERAL_MERCHANDISE
              - FOOD
              - BOOK
              - INTERIOR
              - ELECTRONICS
              - SPORTS
              - COLD_STORAGE
              - FREEZE_STORAGE
              - LARGE_SIZE
        warehouseType:
          type: string
          minLength: 1
          description: |-
            창고 종류
            ("THREEPL", "FULFILLMENT") 중 하나의 값.
        minReleasePerMonth:
          description: 창고주가 원하는 월별 최소 출고량
          type: integer
        latitude:
          type: number
          description: 위도
        longitude:
          type: number
          description: 경도
        deliveryTypes:
          type: array
          description: 택배 업체명이 배열 형태로 옵니다.(Array Of Strings)
          items:
            type: string
        warehouseCondition:
          type: array
          description: |-
            창고의 상태
            ('ROOM_TEMPERATURE','LOW_TEMPERATURE','BONDED','SAVAGE','HAZARDOUS','SELF_STORAGE','CONTAINER') 중 하나 이상의 값을 넣어야 합니다.
          items:
            type: string
        warehouseFacilityUsages:
          type: array
          description: 창고 시설 이용 유의사항(String 배열)
          items:
            type: string
        warehouseUsageCautions:
          type: array
          description: |-
            창고 이용 시 주의사항
            (String 배열)
          items:
            type: string
        insurances:
          type: array
          description: 보험 목록
          items:
            type: string
        securityCompanies:
          type: array
          description: 보안 업체 목록
          items:
            type: string
      required:
        - name
        - space
        - address
        - addressDetail
        - description
        - availableWeekdays
        - openAt
        - closeAt
        - availableTimeDetail
        - cctvExist
        - doorLockExist
        - airConditioningType
        - workerExist
        - canPark
        - mainItemTypes
        - warehouseType
        - minReleasePerMonth
        - latitude
        - longitude
        - deliveryTypes
        - warehouseCondition
        - insurances
        - securityCompanies
      x-tags:
        - dto
    WarehouseSearchDto:
      description: ''
      type: object
      title: ''
      properties:
        address:
          type: string
          minLength: 1
          description: 창고 주소
        warehouseId:
          type: integer
          description: 창고 id
        warehouseCondition:
          type: array
          description: 상온창고 vs 저온창고 vs ...
          items:
            type: string
            enum:
              - ROOM_TEMPERATURE
              - LOW_TEMPERATURE
              - BONDED
              - SAVAGE
              - HAZARDOUS
              - SELF_STORAGE
              - CONTAINER
        minReleasePerMonth:
          type: integer
          description: '월 최소 출고량 '
        name:
          type: string
          minLength: 1
          description: 창고 이름
        warehouseType:
          type: string
          minLength: 1
          enum:
            - THREEPL
            - FULFILLMENT
          description: 3PL 업체 vs 풀필먼트 업체
        closeAt:
          type: string
          minLength: 1
          description: 창고 닫는 시간
        mainImageUrl:
          type: string
          minLength: 1
          format: uri
          description: 메인 이미지 url
        openAt:
          type: string
          minLength: 1
          description: 창고 여는 시간
        space:
          type: integer
          description: 창고 평 수
        deliveryTypes:
          type: array
          description: 사용하는 택배사 종류
          items:
            type: string
            minLength: 1
        mainItemTypes:
          type: array
          description: 창고가 가장 자신있게 보관할 수 있는 물품의 종류들
          items:
            $ref: '#/components/schemas/WarehouseMainItemTypeMatchDto'
      required:
        - address
        - warehouseId
        - warehouseCondition
        - minReleasePerMonth
        - name
        - warehouseType
        - closeAt
        - mainImageUrl
        - openAt
        - space
        - deliveryTypes
        - mainItemTypes
      x-examples:
        example-1:
          address: 경기도 화성
          warehouseId: 1
          warehouseCondition:
            - ROOM_TEMPERATURE
          minReleasePerMonth: 110
          name: 반창고
          warehouseType: THREEPL
          closeAt: '18:00'
          mainImageUrl: 'http://example.com'
          openAt: '09:00'
          space: 100
          deliveryTypes:
            - 한진택배
          mainItemTypes:
            - name: COSMETIC
              match: true
      x-tags:
        - dto
    ErrorDto:
      description: ''
      type: object
      properties:
        timestamp:
          type: number
          description: 에러 발생 시간 timestamp
        status:
          type: number
          description: http status code
        error:
          type: string
          minLength: 1
          description: http status reason phrase
        message:
          type: string
          minLength: 1
          description: 에러 메시지
        path:
          type: string
          minLength: 1
          description: 에러 발생한 url 엔드포인트
      required:
        - timestamp
        - status
        - error
        - message
        - path
      x-tags:
        - dto
    WarehouseDetailDto:
      description: ''
      type: object
      properties:
        warehouseId:
          type: integer
          description: 창고 id
        ownerId:
          description: 창고 소유한 유저 id
          type: integer
        name:
          type: string
          minLength: 1
          description: 창고 이름
        space:
          type: integer
          description: 창고 평 수
        address:
          type: string
          minLength: 1
          description: 창고 주소
        addressDetail:
          type: string
          minLength: 1
          description: 창고 상세 주소
        description:
          type: string
          minLength: 1
          description: 창고 설명
        availableWeekdays:
          description: 창고 여는 요일
          type: integer
        openAt:
          type: string
          minLength: 1
          description: 창고 여는 시간
        closeAt:
          type: string
          minLength: 1
          description: 창고 닫는 시간
        availableTimeDetail:
          type: string
          minLength: 1
          description: ''
        cctvExist:
          description: cctv 유무 여부
          type: boolean
        doorLockExist:
          description: '도어락 존재 유무 '
          type: boolean
        airConditioningType:
          type: string
          minLength: 1
          enum:
            - HEATING
            - COOLING
            - NONE
            - BOTH
          description: 냉난방 현황
        workerExist:
          description: ''
          type: boolean
        canPark:
          description: 주차 가능 여부
          type: boolean
        mainItemTypes:
          type: array
          description: 창고가 가장 자신있게 보관할 수 있는 물품의 종류들
          items:
            type: string
            enum:
              - CLOTH
              - COSMETIC
              - ACCESSORY
              - GENERAL_MERCHANDISE
              - FOOD
              - BOOK
              - INTERIOR
              - ELECTRONICS
              - SPORTS
              - COLD_STORAGE
              - FREEZE_STORAGE
              - LARGE_SIZE
        warehouseType:
          type: string
          minLength: 1
          description: 3PL 창고 vs 풀필먼트 차고
          enum:
            - THREEPL
            - FULFILLMENT
        minReleasePerMonth:
          description: 월 최소 출고량
          type: integer
        latitude:
          type: number
          description: 창고 위치 위도
        longitude:
          type: number
          description: 창고 위치 경도
        mainImageUrl:
          type: string
          minLength: 1
          description: 메인 이미지 url 주소
          format: uri
        deliveryTypes:
          type: array
          description: 택배 회사명
          items:
            type: string
        warehouseCondition:
          type: array
          description: 상온창고 vs 저온창고 vs ...
          items:
            type: string
            enum:
              - ROOM_TEMPERATURE
              - LOW_TEMPERATURE
              - BONDED
              - SAVAGE
              - HAZARDOUS
              - SELF_STORAGE
              - CONTAINER
        warehouseFacilityUsages:
          type: array
          description: 창고 시설 안내
          items:
            type: string
        warehouseUsageCautions:
          type: array
          description: 창고 이용 시 주의사항
          items:
            type: string
        images:
          type: array
          description: 창고 이미지 url 목록
          items:
            type: string
            format: uri
        insurances:
          type: array
          description: 보험 목록
          items:
            type: string
        securityCompanies:
          type: array
          description: 보안 업체 목록
          items:
            type: string
      required:
        - warehouseId
        - ownerId
        - name
        - space
        - address
        - addressDetail
        - description
        - availableWeekdays
        - openAt
        - closeAt
        - availableTimeDetail
        - cctvExist
        - doorLockExist
        - airConditioningType
        - workerExist
        - canPark
        - mainItemTypes
        - warehouseType
        - minReleasePerMonth
        - latitude
        - longitude
        - mainImageUrl
        - deliveryTypes
        - warehouseCondition
        - warehouseFacilityUsages
        - warehouseUsageCautions
        - images
        - insurances
        - securityCompanies
      x-tags:
        - dto
    WarehouseChangeViewableRequestDto:
      title: WarehouseChangeViewableRequestDto
      type: object
      properties:
        warehouseId:
          type: integer
          description: 창고 id
        viewable:
          type: boolean
          description: 창고 조회 가능 여부
      required:
        - warehouseId
        - viewable
      x-tags:
        - dto
    WarehouseMainItemTypeMatchDto:
      title: WarehouseMainItemTypeMatchDto
      type: object
      properties:
        name:
          type: string
          description: 주요 취급 품목 이름
          enum:
            - CLOTH
            - COSMETIC
            - ACCESSORY
            - GENERAL_MERCHANDISE
            - FOOD
            - BOOK
            - INTERIOR
            - ELECTRONICS
            - SPORTS
            - COLD_STORAGE
            - FREEZE_STORAGE
            - LARGE_SIZE
        match:
          description: 검색한 주요 취급 품묵인지 여부
          type: boolean
      required:
        - name
        - match
      x-tags:
        - dto
    WarehouseEstimateRequestDto:
      title: WarehouseEstimateRequestDto
      type: object
      properties:
        warehouseId:
          type: integer
          description: 견적 요청한 창고 id
        estimateItems:
          type: array
          description: 상품 정보 목록
          items:
            $ref: '#/components/schemas/WarehouseEstimateItemRequestDto'
        content:
          type: string
          description: 견적 요청 및 문의사항
        monthlyAverageRelease:
          type: integer
          description: 월 평균 출고량
      required:
        - warehouseId
        - estimateItems
        - content
        - monthlyAverageRelease
      x-tags:
        - dto
    WarehouseEstimateItemRequestDto:
      title: WarehouseEstimateItemDto
      type: object
      description: ''
      properties:
        name:
          type: string
          description: 상품 종류
        keepingNumber:
          type: integer
          description: 보관 수량
        perimeter:
          type: number
          description: 상품 크기
        keepingType:
          type: string
          enum:
            - WARM
            - COLD
            - FREEZE
          description: 보관종류
        weight:
          type: number
          description: 상품 무게
        barcode:
          type: string
          enum:
            - ALL
            - NONE
            - PARTIAL
          description: 바코드 유무
        sku:
          type: integer
          description: sku
        url:
          type: string
          description: 상품 url
      required:
        - name
        - keepingNumber
        - perimeter
        - keepingType
        - weight
        - barcode
        - sku
        - url
      x-tags:
        - dto
    ChangePasswordRequestDto:
      title: ChangePasswordRequestDto
      type: object
      properties:
        originalPassword:
          type: string
          description: 기존 비밀번호
        newPassword:
          type: string
          description: 새로운 비밀번호
      required:
        - originalPassword
        - newPassword
      x-tags:
        - dto
    WarehouseSummaryDto:
      title: WarehouseSummaryDto
      type: object
      properties:
        warehouseId:
          type: integer
          description: 창고 id
        name:
          type: string
          description: 창고 이름
        address:
          type: string
          description: 창고 주소
      required:
        - warehouseId
        - name
        - address
      x-tags:
        - dto
    EstimateSearchDto:
      title: EstimateSearchDto
      type: object
      properties:
        id:
          description: 견적 문의 id
          type: integer
        warehouse:
          $ref: '#/components/schemas/WarehouseSummaryDto'
        status:
          type: string
          enum:
            - IN_PROGRESS
            - RECEPTED
            - DONE
          description: 견적 문의 처리 진행 상황
      required:
        - id
        - warehouse
        - status
      x-tags:
        - dto
    EstimateItemSearchDto:
      title: EstimateItemSearchDto
      type: object
      properties:
        id:
          type: integer
          description: 상품 정보 id
        name:
          type: string
          description: 상품 종류
        keepingNumber:
          type: integer
          description: 보관 수량
        weight:
          description: 상품 무게
          type: number
        barcode:
          type: string
          description: 바코드 종류
          enum:
            - ALL
            - NONE
            - PARTIAL
        sku:
          description: sku
          type: integer
        url:
          type: string
          description: 상품 url
          format: uri
        perimeter:
          type: number
          description: 상품 크기
        keepingType:
          type: string
          description: 보관 형태
          enum:
            - WARM
            - COLD
            - FREEZE
      required:
        - id
        - name
        - keepingNumber
        - weight
        - barcode
        - sku
        - url
        - perimeter
        - keepingType
      x-tags:
        - dto
    UserInfoResponseDto:
      title: UserInfoResponseDto
      type: object
      properties:
        userId:
          type: integer
          description: 사용자 id
        name:
          type: string
          description: 사용자 이름
        email:
          type: string
          description: 사용자 이메일
          format: email
        type:
          type: string
          description: 사용자 종류
          enum:
            - SHIPPER
            - OWNER
        companyName:
          type: string
          description: 회사명
        phoneNumber:
          type:
            - string
            - 'null'
          description: 전화번호
        telephoneNumber:
          type:
            - string
            - 'null'
          description: 사무실 번호
        role:
          type: string
          enum:
            - ADMIN
            - USER
          description: 사용자 권한
      required:
        - userId
        - name
        - email
        - type
        - companyName
        - phoneNumber
        - telephoneNumber
        - role
      x-tags:
        - dto
    UserSignupRequestDto:
      title: UserSignupRequestDto
      type: object
      properties:
        name:
          type: string
          description: 사용자 이름
        email:
          type: string
          description: 사용자 이메일
          format: email
        password:
          type: string
          description: 사용자 비밀번호
        type:
          type: string
          description: 사용자 종류
          enum:
            - SHIPPER
            - OWNER
        companyName:
          type: string
          description: 회사명
        telephoneNumber:
          type: string
          description: 사무실 번호
        phoneNumber:
          type: string
          description: 전화번호
      required:
        - name
        - email
        - password
        - type
        - companyName
        - telephoneNumber
        - phoneNumber
      x-tags:
        - dto
    EstimateStatusUpdqteRequestDto:
      title: EstimateStatusUpdqteRequestDto
      type: object
      properties:
        status:
          type: string
          description: 견적 문의 상태
          enum:
            - RECEPTED
            - IN_PROGRESS
            - DONE
      required:
        - status
      x-tags:
        - dto
    WarehouseAdminDetailResponseDto:
      title: WarehouseAdminDetailResponseDto
      type: object
      properties:
        warehouseId:
          type: integer
          description: 창고 id
        ownerId:
          description: 창고 소유한 유저 id
          type: integer
        name:
          type: string
          minLength: 1
          description: 창고 이름
        space:
          type: integer
          description: 창고 평 수
        address:
          type: string
          minLength: 1
          description: 창고 주소
        addressDetail:
          type: string
          minLength: 1
          description: 창고 상세 주소
        description:
          type: string
          minLength: 1
          description: 창고 설명
        availableWeekdays:
          description: 창고 여는 요일
          type: integer
        openAt:
          type: string
          minLength: 1
          description: 창고 여는 시간
        closeAt:
          type: string
          minLength: 1
          description: 창고 닫는 시간
        availableTimeDetail:
          type: string
          minLength: 1
          description: ''
        cctvExist:
          description: cctv 유무 여부
          type: boolean
        doorLockExist:
          description: '도어락 존재 유무 '
          type: boolean
        airConditioningType:
          type: string
          minLength: 1
          enum:
            - HEATING
            - COOLING
            - NONE
            - BOTH
          description: 냉난방 현황
        workerExist:
          description: ''
          type: boolean
        canPark:
          description: 주차 가능 여부
          type: boolean
        mainItemTypes:
          type: array
          description: 창고가 가장 자신있게 보관할 수 있는 물품의 종류들
          items:
            type: string
            enum:
              - CLOTH
              - COSMETIC
              - ACCESSORY
              - GENERAL_MERCHANDISE
              - FOOD
              - BOOK
              - INTERIOR
              - ELECTRONICS
              - SPORTS
              - COLD_STORAGE
              - FREEZE_STORAGE
              - LARGE_SIZE
        warehouseType:
          type: string
          minLength: 1
          description: 3PL 창고 vs 풀필먼트 차고
          enum:
            - THREEPL
            - FULFILLMENT
        minReleasePerMonth:
          description: 월 최소 출고량
          type: integer
        latitude:
          type: number
          description: 창고 위치 위도
        longitude:
          type: number
          description: 창고 위치 경도
        mainImageUrl:
          type: string
          minLength: 1
          description: 메인 이미지 url 주소
          format: uri
        deliveryTypes:
          type: array
          description: 택배 회사명
          items:
            type: string
        warehouseCondition:
          type: array
          description: 상온창고 vs 저온창고 vs ...
          items:
            type: string
            enum:
              - ROOM_TEMPERATURE
              - LOW_TEMPERATURE
              - BONDED
              - SAVAGE
              - HAZARDOUS
              - SELF_STORAGE
              - CONTAINER
        warehouseFacilityUsages:
          type: array
          description: 창고 시설 안내
          items:
            type: string
        warehouseUsageCautions:
          type: array
          description: 창고 이용 시 주의사항
          items:
            type: string
        images:
          type: array
          description: 창고 이미지 url 목록
          items:
            type: string
            format: uri
        status:
          type: string
          enum:
            - IN_PROGRESS
            - VIEWABLE
            - DELETED
            - REJECTED
          description: 창고 상태
        createdAt:
          type: string
          format: date-time
          description: 창고 생성일
        insurances:
          type: array
          description: 보험 목록
          items:
            type: string
        securityCompanies:
          type: array
          description: 보안 업체 목록
          items:
            type: string
      required:
        - warehouseId
        - ownerId
        - name
        - space
        - address
        - addressDetail
        - description
        - availableWeekdays
        - openAt
        - closeAt
        - availableTimeDetail
        - cctvExist
        - doorLockExist
        - airConditioningType
        - workerExist
        - canPark
        - mainItemTypes
        - warehouseType
        - minReleasePerMonth
        - latitude
        - longitude
        - mainImageUrl
        - deliveryTypes
        - warehouseCondition
        - warehouseFacilityUsages
        - warehouseUsageCautions
        - images
        - status
        - createdAt
        - insurances
        - securityCompanies
      x-tags:
        - dto
    WarehouseAdminUpdateRequestDto:
      title: WarehouseAdminUpdateRequestDto
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 창고 이름
        space:
          type: integer
          description: 창고 평 수
        address:
          type: string
          minLength: 1
          description: 창고 주소
        addressDetail:
          type: string
          minLength: 1
          description: 창고 상세 주소
        description:
          type: string
          minLength: 1
          description: 창고 설명
        availableWeekdays:
          description: 창고 여는 요일
          type: integer
        openAt:
          type: string
          minLength: 1
          description: 창고 여는 시간
        closeAt:
          type: string
          minLength: 1
          description: 창고 닫는 시간
        availableTimeDetail:
          type: string
          minLength: 1
          description: ''
        cctvExist:
          description: cctv 유무 여부
          type: boolean
        doorLockExist:
          description: '도어락 존재 유무 '
          type: boolean
        airConditioningType:
          type: string
          minLength: 1
          enum:
            - HEATING
            - COOLING
            - NONE
            - BOTH
          description: 냉난방 현황
        workerExist:
          description: ''
          type: boolean
        canPark:
          description: 주차 가능 여부
          type: boolean
        warehouseType:
          type: string
          minLength: 1
          description: 3PL 창고 vs 풀필먼트 차고
          enum:
            - THREEPL
            - FULFILLMENT
        minReleasePerMonth:
          description: 월 최소 출고량
          type: integer
        latitude:
          type: number
          description: 창고 위치 위도
        longitude:
          type: number
          description: 창고 위치 경도
        deliveryTypes:
          type: array
          description: 택배 회사명
          items:
            type: string
        warehouseCondition:
          type: array
          description: 상온창고 vs 저온창고 vs ...
          items:
            type: string
            enum:
              - ROOM_TEMPERATURE
              - LOW_TEMPERATURE
              - BONDED
              - SAVAGE
              - HAZARDOUS
              - SELF_STORAGE
              - CONTAINER
        warehouseFacilityUsages:
          type: array
          description: 창고 시설 안내
          items:
            type: string
        warehouseUsageCautions:
          type: array
          description: 창고 이용 시 주의사항
          items:
            type: string
        images:
          type: array
          description: 창고 이미지 url 목록
          items:
            type: string
            format: uri
        status:
          type: string
          enum:
            - IN_PROGRESS
            - VIEWABLE
            - DELETED
            - REJECTED
          description: 창고 상태
        insurances:
          type: array
          description: 보험 목록
          items:
            type: string
        securityCompanies:
          type: array
          description: 보안 업체 목록
          items:
            type: string
        mainItemTypes:
          type: array
          description: 카테고리
          items:
            type: string
      required:
        - name
        - space
        - address
        - addressDetail
        - description
        - availableWeekdays
        - openAt
        - closeAt
        - availableTimeDetail
        - cctvExist
        - doorLockExist
        - airConditioningType
        - workerExist
        - canPark
        - warehouseType
        - minReleasePerMonth
        - latitude
        - longitude
        - deliveryTypes
        - warehouseCondition
        - images
        - status
        - insurances
        - securityCompanies
        - mainItemTypes
      x-tags:
        - dto
    WarehouseUpdateRequestDto:
      title: WarehouseUpdateRequestDto
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 창고 이름
        space:
          type: integer
          description: 창고 평 수
        address:
          type: string
          minLength: 1
          description: 창고 주소
        addressDetail:
          type: string
          minLength: 1
          description: 창고 상세 주소
        description:
          type: string
          minLength: 1
          description: 창고 설명
        availableWeekdays:
          description: 창고 여는 요일
          type: integer
        openAt:
          type: string
          minLength: 1
          description: 창고 여는 시간
        closeAt:
          type: string
          minLength: 1
          description: 창고 닫는 시간
        availableTimeDetail:
          type: string
          minLength: 1
          description: ''
        cctvExist:
          description: cctv 유무 여부
          type: boolean
        doorLockExist:
          description: '도어락 존재 유무 '
          type: boolean
        airConditioningType:
          type: string
          minLength: 1
          enum:
            - HEATING
            - COOLING
            - NONE
            - BOTH
          description: 냉난방 현황
        workerExist:
          description: ''
          type: boolean
        canPark:
          description: 주차 가능 여부
          type: boolean
        mainItemTypes:
          type: array
          description: 창고가 가장 자신있게 보관할 수 있는 물품의 종류들
          items:
            type: string
            enum:
              - CLOTH
              - COSMETIC
              - ACCESSORY
              - GENERAL_MERCHANDISE
              - FOOD
              - BOOK
              - INTERIOR
              - ELECTRONICS
              - SPORTS
              - COLD_STORAGE
              - FREEZE_STORAGE
              - LARGE_SIZE
        warehouseType:
          type: string
          minLength: 1
          description: 3PL 창고 vs 풀필먼트 차고
          enum:
            - THREEPL
            - FULFILLMENT
        minReleasePerMonth:
          description: 월 최소 출고량
          type: integer
        latitude:
          type: number
          description: 창고 위치 위도
        longitude:
          type: number
          description: 창고 위치 경도
        deliveryTypes:
          type: array
          description: 택배 회사명
          items:
            type: string
        warehouseCondition:
          type: array
          description: 상온창고 vs 저온창고 vs ...
          items:
            type: string
            enum:
              - ROOM_TEMPERATURE
              - LOW_TEMPERATURE
              - BONDED
              - SAVAGE
              - HAZARDOUS
              - SELF_STORAGE
              - CONTAINER
        warehouseFacilityUsages:
          type: array
          description: 창고 시설 안내
          items:
            type: string
        warehouseUsageCautions:
          type: array
          description: 창고 이용 시 주의사항
          items:
            type: string
        images:
          type: array
          description: 창고 이미지 url 목록
          items:
            type: string
            format: uri
        insurances:
          type: array
          description: 보험 목록
          items:
            type: string
        securityCompanies:
          type: array
          description: 보안 업체 목록
          items:
            type: string
      required:
        - name
        - space
        - address
        - addressDetail
        - description
        - availableWeekdays
        - openAt
        - closeAt
        - availableTimeDetail
        - cctvExist
        - doorLockExist
        - airConditioningType
        - workerExist
        - canPark
        - mainItemTypes
        - warehouseType
        - minReleasePerMonth
        - latitude
        - longitude
        - deliveryTypes
        - warehouseCondition
        - images
        - insurances
        - securityCompanies
      x-tags:
        - dto
    ImageInfoResponseDto:
      title: ImageInfoResponseDto
      type: object
      properties:
        url:
          type: string
          description: 이미지 url
        isMain:
          type: boolean
          description: '메인 이미지면 true, 아니면 false'
      required:
        - url
        - isMain
      x-tags:
        - dto
  responses:
    WarehouseSearchResponseDto:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              warehouses:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseSearchDto'
            required:
              - warehouses
          examples:
            example-1:
              value:
                warehouses:
                  - address: 경기도 화성
                    warehouseId: 1
                    warehouseCondition:
                      - ROOM_TEMPERATURE
                    minReleasePerMonth: 110
                    name: 반창고
                    warehouseType: THREEPL
                    closeAt: '18:00'
                    mainImageUrl: 'http://example.com'
                    openAt: '09:00'
                    space: 0
                    deliveryTypes:
                      - 한진택배
                    mainItemTypes:
                      - name: COSMETIC
                        match: true
    EstimateSearchResponseDto:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              estimates:
                $ref: '#/components/schemas/EstimateSearchDto'
            required:
              - estimates
    EstimateItemSearchResponseDto:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              estimateItems:
                type: array
                description: 상품 정보 목록
                items:
                  $ref: '#/components/schemas/EstimateItemSearchDto'
            required:
              - estimateItems
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: Bearer Token 값입니다. JWT Token을 사용합니다.
tags:
  - name: 창고
  - name: v3
  - name: 사용자
  - name: 관리자
  - name: 견적 문의
  - name: 이미지
